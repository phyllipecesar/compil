grammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals

generate myDsl "http://www.xtext.org/example/mydsl/MyDsl"

/*
 * SO FAR
 * 
 * LEX.PPNUMBER     [OK]
 * LEX.NAME         [OK]
 * LEX.KEY          [OK]
 * LEX.OPERATORS    [OK]
 * Lex.Token        [OK]
 */
 
Model:
	greetings+=Token;
	
Greeting:
	'Hello' name=ID '!';


SIGN:
	'+'|'-'
;

// lex.charset

hexquad:
	HEXADECIMALDIGIT HEXADECIMALDIGIT HEXADECIMALDIGIT HEXADECIMALDIGIT
;

// lex.icon

terminal integerliteral:
	decimalliteral(('u'|'U')('l'|'L')?|('u'|'U')('ll'|'LL')?|('l'|'L')('u'|'U')?|('ll'|'LL')('u'|'U')?)?|
	octalliteral(('u'|'U')('l'|'L')?|('u'|'U')('ll'|'LL')?|('l'|'L')('u'|'U')?|('ll'|'LL')('u'|'U')?)?|
	hexadecimalliteral(('u'|'U')('l'|'L')?|('u'|'U')('ll'|'LL')?|('l'|'L')('u'|'U')?|('ll'|'LL')('u'|'U')?)?
;
terminal decimalliteral:
	'1'..'9' ('0'..'9')*
;
terminal octalliteral:
	'0' ('0'..'7')*
;

terminal hexadecimalliteral:
	('0x'|'0X') ('0'..'9'|'a'..'f'|'A'..'F')+;
	
 NONZERODIGIT:
	'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9'
;
OCTALDIGIT:
	'0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'
;
HEXADECIMALDIGIT:
	'0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9'|'a'|'b'|'c'|'d'|'e'|'f'|
	'A'|'B'|'C'|'D'|'E'|'F'
	;

integersuffix:
	UNSIGNEDSUFFIX (LONGSUFFIX)?|
	UNSIGNEDSUFFIX (LONGLONGSUFFIX)?|
	LONGSUFFIX (UNSIGNEDSUFFIX)?|
	LONGLONGSUFFIX (UNSIGNEDSUFFIX)?
	
;
 UNSIGNEDSUFFIX:
	'u'|'U'
;

LONGSUFFIX:
	'l'|'L'
;

LONGLONGSUFFIX:
	'll'|'LL'
;
// LEX.TOKEN

Token: 
	Identifier |
	KEYWORD |
//	Literal |
	PPOPorPUNC
;
// LEX.PPNUMBER === LEFT RECURSION REMOVED
 	
terminal Ppnumber:  
 	(('0'..'9') | '.' ('0'..'9')) ('0'..'9'|('a'..'z'|'A'..'Z'|'_')| 'e'('+'|'-')|'E'('+'|'-')|'.')*;
 // LEX _ NAME === LEFT RECURSION REMOVED

terminal LITERAL:
	inte
;

// LEX.KEY
terminal KEYWORD:	  
 	'alignas'|
 	'alignof'| 
 	'asm'|
 	'auto'|
 	'bool'|
 	'break'|
 	'case'|
 	'catch'|
 	'char'|
 	'char16_t'|
 	'char32_t'|
 	'class'|
 	'const'|
 	'constexpr'|
 	'const_cast'|
 	'continue'|
 	'decltype'|
 	'default'|
 	'delete'|
 	'do'|
 	'double'|
 	'dynamic_cast'|
 	'else'|
 	'enum'|
 	'explicit'|
 	'export'|
 	'extern'|
 	'false'|
 	'float'|
 	'for'|
 	'friend'|
 	'goto'|
 	'if'|
 	'inline'|
 	'int'|
 	'long'|
 	'mutable'|
 	'namespace'|
 	'new'|
 	'noexcept'|
 	'nullptr'|
 	'operator'|
 	'private'|
 	'protected'|
 	'public'|
 	'register'|
 	'reinterpret_cast'|
 	'return'|
 	'short'|
 	'signed'|
 	'sizeof'|
 	'static'|
 	'static_assert'|
 	'static_cast'|
 	'struct'|
 	'switch'|
 	'template'|
 	'this'|
 	'thread_local'|
 	'throw'|
 	'true'|
 	'try'|
 	'typedef'|
 	'typeid'|
 	'typename'|
 	'union'|
 	'unsigned'|
 	'using'|
 	'virtual'|
 	'void'|
 	'volatile'|
 	'wchar_t'|
 	'while';
 	
 	
 	
// LEX.OPERATORS
// TODO(rigelbm): operator-token and punctuator
terminal PPOPorPUNC:
	'{'|
 	'}'|
 	'['|
 	']'|
 	'#'|
 	'##'|
 	'('|
 	')'|
 	'<:'|
 	':>'|
 	'<%'|
 	'%>'|
 	'%:'|
 	'%:%:'|
 	';'|
 	':'|
 	'...'|
 	'new'|
 	'delete'|
 	'?'|
 	'::'|
 	'.'|
 	'.*'|
 	'+'|
 	'-'|
 	'*'|
 	'/'|
 	'%'|
 	'^'|
 	'&'|
 	'|'|
 	'~'|
 	'!'|
 	'='|
 	'<'|
 	'>'|
 	'+='|
 	'-='|
 	'*='|
 	'/='|
 	'%='|
 	'^='|
 	'&='|
 	'|='|
 	'<<'|
 	'>>'|
 	'<<='|
 	'>>='|
 	'=='|
 	'!='|
 	'<='|
 	'>='|
 	'&&'|
 	'||'|
 	'++'|
 	'--'|
 	','|
 	'->*'|
 	'->'|
 	'and'|
 	'and_eq'|
 	'bitand'|
 	'bitor'|
 	'compl'|
 	'not'|
 	'not_eq'|
 	'or'|
 	'or_eq'|
 	'xor'|
 	'xor_eq';
 
 terminal Identifier:
	('a'..'z'|'A'..'Z'|'_') ('0'..'9'|'A'..'Z'|'a'..'z'|'_')*;
 	