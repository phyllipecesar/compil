/*
 * generated by Xtext
 */
package org.xtext.example.mydsl.validation

import java.util.ArrayList
import java.util.Iterator
import java.*
import java.util.TreeSet
import java.util.List
import org.eclipse.xtext.validation.Check
import org.xtext.example.mydsl.myDsl.statement
import java.util.HashSet
import java.util.HashMap
import org.xtext.example.mydsl.myDsl.block_declaration

/**
 * Custom validation rules. 
 *
 * see http://www.eclipse.org/Xtext/documentation.html#validation
 */
class MyDslValidator extends AbstractMyDslValidator {
	HashSet<String> hash = new HashSet<String>();


@Check
def checkVariableAlreadyExists(statement st) {
		hash.clear();
		for (block_declaration block : st.variavel.variaveis) {
			val nome = block.variavel.variavel.name;
			if (hash.contains(nome)) {
				error("Variable " + nome + " already exists", block.variavel.variavel, null, -1);
			}
			hash.add(nome);
		}
		
		
	
}
//  public static val INVALID_NAME = 'invalidName'
//
//	@Check
//	def checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.name.charAt(0))) {
//			warning('Name should start with a capital', 
//					MyDslPackage.Literals.GREETING__NAME,
//					INVALID_NAME)
//		}
//	}
}
