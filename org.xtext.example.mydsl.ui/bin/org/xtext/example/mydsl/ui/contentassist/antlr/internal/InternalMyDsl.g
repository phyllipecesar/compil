/*
* generated by Xtext
*/
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.xtext.example.mydsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {
 
 	private MyDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getElementsAssignment()); }
(rule__Model__ElementsAssignment)
{ after(grammarAccess.getModelAccess().getElementsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarDecl
entryRuleVarDecl 
:
{ before(grammarAccess.getVarDeclRule()); }
	 ruleVarDecl
{ after(grammarAccess.getVarDeclRule()); } 
	 EOF 
;

// Rule VarDecl
ruleVarDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarDeclAccess().getGroup()); }
(rule__VarDecl__Group__0)
{ after(grammarAccess.getVarDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getSimple_type_specifierParserRuleCall()); }
	rulesimple_type_specifier
{ after(grammarAccess.getTypeAccess().getSimple_type_specifierParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulesimple_type_specifier
entryRulesimple_type_specifier 
:
{ before(grammarAccess.getSimple_type_specifierRule()); }
	 rulesimple_type_specifier
{ after(grammarAccess.getSimple_type_specifierRule()); } 
	 EOF 
;

// Rule simple_type_specifier
rulesimple_type_specifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimple_type_specifierAccess().getAlternatives()); }
(rule__Simple_type_specifier__Alternatives)
{ after(grammarAccess.getSimple_type_specifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulenew_line
entryRulenew_line 
:
{ before(grammarAccess.getNew_lineRule()); }
	 rulenew_line
{ after(grammarAccess.getNew_lineRule()); } 
	 EOF 
;

// Rule new_line
rulenew_line
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNew_lineAccess().getAlternatives()); }
(rule__New_line__Alternatives)
{ after(grammarAccess.getNew_lineAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRulegroup
entryRulegroup 
:
{ before(grammarAccess.getGroupRule()); }
	 rulegroup
{ after(grammarAccess.getGroupRule()); } 
	 EOF 
;

// Rule group
rulegroup
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getGroupAccess().getGroup_partParserRuleCall()); }
(	rulegroup_part)
{ after(grammarAccess.getGroupAccess().getGroup_partParserRuleCall()); }
)
(
{ before(grammarAccess.getGroupAccess().getGroup_partParserRuleCall()); }
(	rulegroup_part)*
{ after(grammarAccess.getGroupAccess().getGroup_partParserRuleCall()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulegroup_part
entryRulegroup_part 
:
{ before(grammarAccess.getGroup_partRule()); }
	 rulegroup_part
{ after(grammarAccess.getGroup_partRule()); } 
	 EOF 
;

// Rule group_part
rulegroup_part
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGroup_partAccess().getAlternatives()); }
(rule__Group_part__Alternatives)
{ after(grammarAccess.getGroup_partAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleif_action
entryRuleif_action 
:
{ before(grammarAccess.getIf_actionRule()); }
	 ruleif_action
{ after(grammarAccess.getIf_actionRule()); } 
	 EOF 
;

// Rule if_action
ruleif_action
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIf_actionAccess().getGroup()); }
(rule__If_action__Group__0)
{ after(grammarAccess.getIf_actionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleif_group
entryRuleif_group 
:
{ before(grammarAccess.getIf_groupRule()); }
	 ruleif_group
{ after(grammarAccess.getIf_groupRule()); } 
	 EOF 
;

// Rule if_group
ruleif_group
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIf_groupAccess().getAlternatives()); }
(rule__If_group__Alternatives)
{ after(grammarAccess.getIf_groupAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleelif_groups
entryRuleelif_groups 
:
{ before(grammarAccess.getElif_groupsRule()); }
	 ruleelif_groups
{ after(grammarAccess.getElif_groupsRule()); } 
	 EOF 
;

// Rule elif_groups
ruleelif_groups
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getElif_groupsAccess().getElif_groupParserRuleCall()); }
(	ruleelif_group)
{ after(grammarAccess.getElif_groupsAccess().getElif_groupParserRuleCall()); }
)
(
{ before(grammarAccess.getElif_groupsAccess().getElif_groupParserRuleCall()); }
(	ruleelif_group)*
{ after(grammarAccess.getElif_groupsAccess().getElif_groupParserRuleCall()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleelif_group
entryRuleelif_group 
:
{ before(grammarAccess.getElif_groupRule()); }
	 ruleelif_group
{ after(grammarAccess.getElif_groupRule()); } 
	 EOF 
;

// Rule elif_group
ruleelif_group
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElif_groupAccess().getGroup()); }
(rule__Elif_group__Group__0)
{ after(grammarAccess.getElif_groupAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestatement
entryRulestatement 
:
{ before(grammarAccess.getStatementRule()); }
	 rulestatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule statement
rulestatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getGroup()); }
(rule__Statement__Group__0)
{ after(grammarAccess.getStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulesimple_declaration
entryRulesimple_declaration 
:
{ before(grammarAccess.getSimple_declarationRule()); }
	 rulesimple_declaration
{ after(grammarAccess.getSimple_declarationRule()); } 
	 EOF 
;

// Rule simple_declaration
rulesimple_declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimple_declarationAccess().getGroup()); }
(rule__Simple_declaration__Group__0)
{ after(grammarAccess.getSimple_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuledeclaration_statement
entryRuledeclaration_statement 
:
{ before(grammarAccess.getDeclaration_statementRule()); }
	 ruledeclaration_statement
{ after(grammarAccess.getDeclaration_statementRule()); } 
	 EOF 
;

// Rule declaration_statement
ruledeclaration_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getDeclaration_statementAccess().getVariaveisAssignment()); }
(rule__Declaration_statement__VariaveisAssignment)
{ after(grammarAccess.getDeclaration_statementAccess().getVariaveisAssignment()); }
)
(
{ before(grammarAccess.getDeclaration_statementAccess().getVariaveisAssignment()); }
(rule__Declaration_statement__VariaveisAssignment)*
{ after(grammarAccess.getDeclaration_statementAccess().getVariaveisAssignment()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleblock_declaration
entryRuleblock_declaration 
:
{ before(grammarAccess.getBlock_declarationRule()); }
	 ruleblock_declaration
{ after(grammarAccess.getBlock_declarationRule()); } 
	 EOF 
;

// Rule block_declaration
ruleblock_declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlock_declarationAccess().getGroup()); }
(rule__Block_declaration__Group__0)
{ after(grammarAccess.getBlock_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconstant_expression
entryRuleconstant_expression 
:
{ before(grammarAccess.getConstant_expressionRule()); }
	 ruleconstant_expression
{ after(grammarAccess.getConstant_expressionRule()); } 
	 EOF 
;

// Rule constant_expression
ruleconstant_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstant_expressionAccess().getConditional_expressionParserRuleCall()); }
	ruleconditional_expression
{ after(grammarAccess.getConstant_expressionAccess().getConditional_expressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconditional_expression
entryRuleconditional_expression 
:
{ before(grammarAccess.getConditional_expressionRule()); }
	 ruleconditional_expression
{ after(grammarAccess.getConditional_expressionRule()); } 
	 EOF 
;

// Rule conditional_expression
ruleconditional_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditional_expressionAccess().getGroup()); }
(rule__Conditional_expression__Group__0)
{ after(grammarAccess.getConditional_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulelogical_or_expression
entryRulelogical_or_expression 
:
{ before(grammarAccess.getLogical_or_expressionRule()); }
	 rulelogical_or_expression
{ after(grammarAccess.getLogical_or_expressionRule()); } 
	 EOF 
;

// Rule logical_or_expression
rulelogical_or_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogical_or_expressionAccess().getGroup()); }
(rule__Logical_or_expression__Group__0)
{ after(grammarAccess.getLogical_or_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulelogical_and_expression
entryRulelogical_and_expression 
:
{ before(grammarAccess.getLogical_and_expressionRule()); }
	 rulelogical_and_expression
{ after(grammarAccess.getLogical_and_expressionRule()); } 
	 EOF 
;

// Rule logical_and_expression
rulelogical_and_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogical_and_expressionAccess().getGroup()); }
(rule__Logical_and_expression__Group__0)
{ after(grammarAccess.getLogical_and_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleinclusive_or_expression
entryRuleinclusive_or_expression 
:
{ before(grammarAccess.getInclusive_or_expressionRule()); }
	 ruleinclusive_or_expression
{ after(grammarAccess.getInclusive_or_expressionRule()); } 
	 EOF 
;

// Rule inclusive_or_expression
ruleinclusive_or_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInclusive_or_expressionAccess().getGroup()); }
(rule__Inclusive_or_expression__Group__0)
{ after(grammarAccess.getInclusive_or_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleexclusive_or_expression
entryRuleexclusive_or_expression 
:
{ before(grammarAccess.getExclusive_or_expressionRule()); }
	 ruleexclusive_or_expression
{ after(grammarAccess.getExclusive_or_expressionRule()); } 
	 EOF 
;

// Rule exclusive_or_expression
ruleexclusive_or_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExclusive_or_expressionAccess().getGroup()); }
(rule__Exclusive_or_expression__Group__0)
{ after(grammarAccess.getExclusive_or_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleand_expression
entryRuleand_expression 
:
{ before(grammarAccess.getAnd_expressionRule()); }
	 ruleand_expression
{ after(grammarAccess.getAnd_expressionRule()); } 
	 EOF 
;

// Rule and_expression
ruleand_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnd_expressionAccess().getGroup()); }
(rule__And_expression__Group__0)
{ after(grammarAccess.getAnd_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleequality_expression
entryRuleequality_expression 
:
{ before(grammarAccess.getEquality_expressionRule()); }
	 ruleequality_expression
{ after(grammarAccess.getEquality_expressionRule()); } 
	 EOF 
;

// Rule equality_expression
ruleequality_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEquality_expressionAccess().getGroup()); }
(rule__Equality_expression__Group__0)
{ after(grammarAccess.getEquality_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerelational_expression
entryRulerelational_expression 
:
{ before(grammarAccess.getRelational_expressionRule()); }
	 rulerelational_expression
{ after(grammarAccess.getRelational_expressionRule()); } 
	 EOF 
;

// Rule relational_expression
rulerelational_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelational_expressionAccess().getGroup()); }
(rule__Relational_expression__Group__0)
{ after(grammarAccess.getRelational_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleshift_expression
entryRuleshift_expression 
:
{ before(grammarAccess.getShift_expressionRule()); }
	 ruleshift_expression
{ after(grammarAccess.getShift_expressionRule()); } 
	 EOF 
;

// Rule shift_expression
ruleshift_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getShift_expressionAccess().getGroup()); }
(rule__Shift_expression__Group__0)
{ after(grammarAccess.getShift_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleadditive_expression
entryRuleadditive_expression 
:
{ before(grammarAccess.getAdditive_expressionRule()); }
	 ruleadditive_expression
{ after(grammarAccess.getAdditive_expressionRule()); } 
	 EOF 
;

// Rule additive_expression
ruleadditive_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditive_expressionAccess().getGroup()); }
(rule__Additive_expression__Group__0)
{ after(grammarAccess.getAdditive_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemultiplicative_expression
entryRulemultiplicative_expression 
:
{ before(grammarAccess.getMultiplicative_expressionRule()); }
	 rulemultiplicative_expression
{ after(grammarAccess.getMultiplicative_expressionRule()); } 
	 EOF 
;

// Rule multiplicative_expression
rulemultiplicative_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicative_expressionAccess().getGroup()); }
(rule__Multiplicative_expression__Group__0)
{ after(grammarAccess.getMultiplicative_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulepm_expression
entryRulepm_expression 
:
{ before(grammarAccess.getPm_expressionRule()); }
	 rulepm_expression
{ after(grammarAccess.getPm_expressionRule()); } 
	 EOF 
;

// Rule pm_expression
rulepm_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPm_expressionAccess().getGroup()); }
(rule__Pm_expression__Group__0)
{ after(grammarAccess.getPm_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecast_expression
entryRulecast_expression 
:
{ before(grammarAccess.getCast_expressionRule()); }
	 rulecast_expression
{ after(grammarAccess.getCast_expressionRule()); } 
	 EOF 
;

// Rule cast_expression
rulecast_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCast_expressionAccess().getGroup()); }
(rule__Cast_expression__Group__0)
{ after(grammarAccess.getCast_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleunary_expression
entryRuleunary_expression 
:
{ before(grammarAccess.getUnary_expressionRule()); }
	 ruleunary_expression
{ after(grammarAccess.getUnary_expressionRule()); } 
	 EOF 
;

// Rule unary_expression
ruleunary_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnary_expressionAccess().getAlternatives()); }
(rule__Unary_expression__Alternatives)
{ after(grammarAccess.getUnary_expressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulepostfix_expression
entryRulepostfix_expression 
:
{ before(grammarAccess.getPostfix_expressionRule()); }
	 rulepostfix_expression
{ after(grammarAccess.getPostfix_expressionRule()); } 
	 EOF 
;

// Rule postfix_expression
rulepostfix_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPostfix_expressionAccess().getGroup()); }
(rule__Postfix_expression__Group__0)
{ after(grammarAccess.getPostfix_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleprimary_expression
entryRuleprimary_expression 
:
{ before(grammarAccess.getPrimary_expressionRule()); }
	 ruleprimary_expression
{ after(grammarAccess.getPrimary_expressionRule()); } 
	 EOF 
;

// Rule primary_expression
ruleprimary_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimary_expressionAccess().getPrimaryKeyword()); }

	'==primary==' 

{ after(grammarAccess.getPrimary_expressionAccess().getPrimaryKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulepseudo_destructor_name
entryRulepseudo_destructor_name 
:
{ before(grammarAccess.getPseudo_destructor_nameRule()); }
	 rulepseudo_destructor_name
{ after(grammarAccess.getPseudo_destructor_nameRule()); } 
	 EOF 
;

// Rule pseudo_destructor_name
rulepseudo_destructor_name
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPseudo_destructor_nameAccess().getAlternatives()); }
(rule__Pseudo_destructor_name__Alternatives)
{ after(grammarAccess.getPseudo_destructor_nameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulenested_name_specifier
entryRulenested_name_specifier 
:
{ before(grammarAccess.getNested_name_specifierRule()); }
	 rulenested_name_specifier
{ after(grammarAccess.getNested_name_specifierRule()); } 
	 EOF 
;

// Rule nested_name_specifier
rulenested_name_specifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNested_name_specifierAccess().getGroup()); }
(rule__Nested_name_specifier__Group__0)
{ after(grammarAccess.getNested_name_specifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleclass_or_namespace_name
entryRuleclass_or_namespace_name 
:
{ before(grammarAccess.getClass_or_namespace_nameRule()); }
	 ruleclass_or_namespace_name
{ after(grammarAccess.getClass_or_namespace_nameRule()); } 
	 EOF 
;

// Rule class_or_namespace_name
ruleclass_or_namespace_name
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClass_or_namespace_nameAccess().getAlternatives()); }
(rule__Class_or_namespace_name__Alternatives)
{ after(grammarAccess.getClass_or_namespace_nameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleclass_name
entryRuleclass_name 
:
{ before(grammarAccess.getClass_nameRule()); }
	 ruleclass_name
{ after(grammarAccess.getClass_nameRule()); } 
	 EOF 
;

// Rule class_name
ruleclass_name
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClass_nameAccess().getAlternatives()); }
(rule__Class_name__Alternatives)
{ after(grammarAccess.getClass_nameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulenamespace_name
entryRulenamespace_name 
:
{ before(grammarAccess.getNamespace_nameRule()); }
	 rulenamespace_name
{ after(grammarAccess.getNamespace_nameRule()); } 
	 EOF 
;

// Rule namespace_name
rulenamespace_name
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamespace_nameAccess().getNamespaceKeyword()); }

	'==namespace==' 

{ after(grammarAccess.getNamespace_nameAccess().getNamespaceKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuletype_name
entryRuletype_name 
:
{ before(grammarAccess.getType_nameRule()); }
	 ruletype_name
{ after(grammarAccess.getType_nameRule()); } 
	 EOF 
;

// Rule type_name
ruletype_name
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getType_nameAccess().getType_nameKeyword()); }

	'==type_name==' 

{ after(grammarAccess.getType_nameAccess().getType_nameKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuletemplate_id
entryRuletemplate_id 
:
{ before(grammarAccess.getTemplate_idRule()); }
	 ruletemplate_id
{ after(grammarAccess.getTemplate_idRule()); } 
	 EOF 
;

// Rule template_id
ruletemplate_id
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTemplate_idAccess().getGroup()); }
(rule__Template_id__Group__0)
{ after(grammarAccess.getTemplate_idAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuletemplate_argument_list
entryRuletemplate_argument_list 
:
{ before(grammarAccess.getTemplate_argument_listRule()); }
	 ruletemplate_argument_list
{ after(grammarAccess.getTemplate_argument_listRule()); } 
	 EOF 
;

// Rule template_argument_list
ruletemplate_argument_list
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTemplate_argument_listAccess().getGroup()); }
(rule__Template_argument_list__Group__0)
{ after(grammarAccess.getTemplate_argument_listAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuletemplate_argument
entryRuletemplate_argument 
:
{ before(grammarAccess.getTemplate_argumentRule()); }
	 ruletemplate_argument
{ after(grammarAccess.getTemplate_argumentRule()); } 
	 EOF 
;

// Rule template_argument
ruletemplate_argument
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTemplate_argumentAccess().getAlternatives()); }
(rule__Template_argument__Alternatives)
{ after(grammarAccess.getTemplate_argumentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleid_expression
entryRuleid_expression 
:
{ before(grammarAccess.getId_expressionRule()); }
	 ruleid_expression
{ after(grammarAccess.getId_expressionRule()); } 
	 EOF 
;

// Rule id_expression
ruleid_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getId_expressionAccess().getAlternatives()); }
(rule__Id_expression__Alternatives)
{ after(grammarAccess.getId_expressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleunqualified_id
entryRuleunqualified_id 
:
{ before(grammarAccess.getUnqualified_idRule()); }
	 ruleunqualified_id
{ after(grammarAccess.getUnqualified_idRule()); } 
	 EOF 
;

// Rule unqualified_id
ruleunqualified_id
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnqualified_idAccess().getAlternatives()); }
(rule__Unqualified_id__Alternatives)
{ after(grammarAccess.getUnqualified_idAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleoperator_function_id
entryRuleoperator_function_id 
:
{ before(grammarAccess.getOperator_function_idRule()); }
	 ruleoperator_function_id
{ after(grammarAccess.getOperator_function_idRule()); } 
	 EOF 
;

// Rule operator_function_id
ruleoperator_function_id
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperator_function_idAccess().getGroup()); }
(rule__Operator_function_id__Group__0)
{ after(grammarAccess.getOperator_function_idAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleoperator
entryRuleoperator 
:
{ before(grammarAccess.getOperatorRule()); }
	 ruleoperator
{ after(grammarAccess.getOperatorRule()); } 
	 EOF 
;

// Rule operator
ruleoperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperatorAccess().getAlternatives()); }
(rule__Operator__Alternatives)
{ after(grammarAccess.getOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconversion_function_id
entryRuleconversion_function_id 
:
{ before(grammarAccess.getConversion_function_idRule()); }
	 ruleconversion_function_id
{ after(grammarAccess.getConversion_function_idRule()); } 
	 EOF 
;

// Rule conversion_function_id
ruleconversion_function_id
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConversion_function_idAccess().getGroup()); }
(rule__Conversion_function_id__Group__0)
{ after(grammarAccess.getConversion_function_idAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconversion_type_id
entryRuleconversion_type_id 
:
{ before(grammarAccess.getConversion_type_idRule()); }
	 ruleconversion_type_id
{ after(grammarAccess.getConversion_type_idRule()); } 
	 EOF 
;

// Rule conversion_type_id
ruleconversion_type_id
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConversion_type_idAccess().getGroup()); }
(rule__Conversion_type_id__Group__0)
{ after(grammarAccess.getConversion_type_idAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconversion_declarator
entryRuleconversion_declarator 
:
{ before(grammarAccess.getConversion_declaratorRule()); }
	 ruleconversion_declarator
{ after(grammarAccess.getConversion_declaratorRule()); } 
	 EOF 
;

// Rule conversion_declarator
ruleconversion_declarator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConversion_declaratorAccess().getConversionKeyword()); }

	'==conversion==' 

{ after(grammarAccess.getConversion_declaratorAccess().getConversionKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuletype_specifier_seq
entryRuletype_specifier_seq 
:
{ before(grammarAccess.getType_specifier_seqRule()); }
	 ruletype_specifier_seq
{ after(grammarAccess.getType_specifier_seqRule()); } 
	 EOF 
;

// Rule type_specifier_seq
ruletype_specifier_seq
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getType_specifier_seqAccess().getType_specifierParserRuleCall()); }
(	ruletype_specifier)
{ after(grammarAccess.getType_specifier_seqAccess().getType_specifierParserRuleCall()); }
)
(
{ before(grammarAccess.getType_specifier_seqAccess().getType_specifierParserRuleCall()); }
(	ruletype_specifier)*
{ after(grammarAccess.getType_specifier_seqAccess().getType_specifierParserRuleCall()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuletype_specifier
entryRuletype_specifier 
:
{ before(grammarAccess.getType_specifierRule()); }
	 ruletype_specifier
{ after(grammarAccess.getType_specifierRule()); } 
	 EOF 
;

// Rule type_specifier
ruletype_specifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getType_specifierAccess().getType_specifierKeyword()); }

	'==type_specifier==' 

{ after(grammarAccess.getType_specifierAccess().getType_specifierKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulequalified_id
entryRulequalified_id 
:
{ before(grammarAccess.getQualified_idRule()); }
	 rulequalified_id
{ after(grammarAccess.getQualified_idRule()); } 
	 EOF 
;

// Rule qualified_id
rulequalified_id
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualified_idAccess().getQualifiedKeyword()); }

	'==qualified==' 

{ after(grammarAccess.getQualified_idAccess().getQualifiedKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulenew_expression
entryRulenew_expression 
:
{ before(grammarAccess.getNew_expressionRule()); }
	 rulenew_expression
{ after(grammarAccess.getNew_expressionRule()); } 
	 EOF 
;

// Rule new_expression
rulenew_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNew_expressionAccess().getNewKeyword()); }

	'==new==' 

{ after(grammarAccess.getNew_expressionAccess().getNewKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuledelete_expression
entryRuledelete_expression 
:
{ before(grammarAccess.getDelete_expressionRule()); }
	 ruledelete_expression
{ after(grammarAccess.getDelete_expressionRule()); } 
	 EOF 
;

// Rule delete_expression
ruledelete_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDelete_expressionAccess().getDeleteKeyword()); }

	'==delete==' 

{ after(grammarAccess.getDelete_expressionAccess().getDeleteKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleunary_operator
entryRuleunary_operator 
:
{ before(grammarAccess.getUnary_operatorRule()); }
	 ruleunary_operator
{ after(grammarAccess.getUnary_operatorRule()); } 
	 EOF 
;

// Rule unary_operator
ruleunary_operator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnary_operatorAccess().getAlternatives()); }
(rule__Unary_operator__Alternatives)
{ after(grammarAccess.getUnary_operatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleexpression_list
entryRuleexpression_list 
:
{ before(grammarAccess.getExpression_listRule()); }
	 ruleexpression_list
{ after(grammarAccess.getExpression_listRule()); } 
	 EOF 
;

// Rule expression_list
ruleexpression_list
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_listAccess().getGroup()); }
(rule__Expression_list__Group__0)
{ after(grammarAccess.getExpression_listAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleexpression
entryRuleexpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleexpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule expression
ruleexpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getExpressionKeyword()); }

	'==expression==' 

{ after(grammarAccess.getExpressionAccess().getExpressionKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleassignment_expression
entryRuleassignment_expression 
:
{ before(grammarAccess.getAssignment_expressionRule()); }
	 ruleassignment_expression
{ after(grammarAccess.getAssignment_expressionRule()); } 
	 EOF 
;

// Rule assignment_expression
ruleassignment_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignment_expressionAccess().getAssignmentKeyword()); }

	'==assignment==' 

{ after(grammarAccess.getAssignment_expressionAccess().getAssignmentKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulepreprocessing_token
entryRulepreprocessing_token 
:
{ before(grammarAccess.getPreprocessing_tokenRule()); }
	 rulepreprocessing_token
{ after(grammarAccess.getPreprocessing_tokenRule()); } 
	 EOF 
;

// Rule preprocessing_token
rulepreprocessing_token
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPreprocessing_tokenAccess().getAlternatives()); }
(rule__Preprocessing_token__Alternatives)
{ after(grammarAccess.getPreprocessing_tokenAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleelse_group
entryRuleelse_group 
:
{ before(grammarAccess.getElse_groupRule()); }
	 ruleelse_group
{ after(grammarAccess.getElse_groupRule()); } 
	 EOF 
;

// Rule else_group
ruleelse_group
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElse_groupAccess().getGroup()); }
(rule__Else_group__Group__0)
{ after(grammarAccess.getElse_groupAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleendif_line
entryRuleendif_line 
:
{ before(grammarAccess.getEndif_lineRule()); }
	 ruleendif_line
{ after(grammarAccess.getEndif_lineRule()); } 
	 EOF 
;

// Rule endif_line
ruleendif_line
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEndif_lineAccess().getGroup()); }
(rule__Endif_line__Group__0)
{ after(grammarAccess.getEndif_lineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecontrol_line
entryRulecontrol_line 
:
{ before(grammarAccess.getControl_lineRule()); }
	 rulecontrol_line
{ after(grammarAccess.getControl_lineRule()); } 
	 EOF 
;

// Rule control_line
rulecontrol_line
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getControl_lineAccess().getAlternatives()); }
(rule__Control_line__Alternatives)
{ after(grammarAccess.getControl_lineAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulelparen
entryRulelparen 
:
{ before(grammarAccess.getLparenRule()); }
	 rulelparen
{ after(grammarAccess.getLparenRule()); } 
	 EOF 
;

// Rule lparen
rulelparen
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLparenAccess().getLeftParenthesisKeyword()); }

	'(' 

{ after(grammarAccess.getLparenAccess().getLeftParenthesisKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulereplacement_list
entryRulereplacement_list 
:
{ before(grammarAccess.getReplacement_listRule()); }
	 rulereplacement_list
{ after(grammarAccess.getReplacement_listRule()); } 
	 EOF 
;

// Rule replacement_list
rulereplacement_list
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReplacement_listAccess().getPp_tokensParserRuleCall()); }
(	rulepp_tokens)?
{ after(grammarAccess.getReplacement_listAccess().getPp_tokensParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulepp_tokens
entryRulepp_tokens 
:
{ before(grammarAccess.getPp_tokensRule()); }
	 rulepp_tokens
{ after(grammarAccess.getPp_tokensRule()); } 
	 EOF 
;

// Rule pp_tokens
rulepp_tokens
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getPp_tokensAccess().getPreprocessing_tokenParserRuleCall()); }
(	rulepreprocessing_token)
{ after(grammarAccess.getPp_tokensAccess().getPreprocessing_tokenParserRuleCall()); }
)
(
{ before(grammarAccess.getPp_tokensAccess().getPreprocessing_tokenParserRuleCall()); }
(	rulepreprocessing_token)*
{ after(grammarAccess.getPp_tokensAccess().getPreprocessing_tokenParserRuleCall()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSIGN
entryRuleSIGN 
:
{ before(grammarAccess.getSIGNRule()); }
	 ruleSIGN
{ after(grammarAccess.getSIGNRule()); } 
	 EOF 
;

// Rule SIGN
ruleSIGN
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSIGNAccess().getAlternatives()); }
(rule__SIGN__Alternatives)
{ after(grammarAccess.getSIGNAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Simple_type_specifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_type_specifierAccess().getGroup_0()); }
(rule__Simple_type_specifier__Group_0__0)
{ after(grammarAccess.getSimple_type_specifierAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSimple_type_specifierAccess().getGroup_1()); }
(rule__Simple_type_specifier__Group_1__0)
{ after(grammarAccess.getSimple_type_specifierAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__New_line__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNew_lineAccess().getControl000aKeyword_0()); }

	'\n' 

{ after(grammarAccess.getNew_lineAccess().getControl000aKeyword_0()); }
)

    |(
{ before(grammarAccess.getNew_lineAccess().getControl000dControl000aKeyword_1()); }

	'\r\n' 

{ after(grammarAccess.getNew_lineAccess().getControl000dControl000aKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Group_part__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroup_partAccess().getGroup_0()); }
(rule__Group_part__Group_0__0)
{ after(grammarAccess.getGroup_partAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getGroup_partAccess().getIf_actionParserRuleCall_1()); }
	ruleif_action
{ after(grammarAccess.getGroup_partAccess().getIf_actionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getGroup_partAccess().getControl_lineParserRuleCall_2()); }
	rulecontrol_line
{ after(grammarAccess.getGroup_partAccess().getControl_lineParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If_group__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_groupAccess().getGroup_0()); }
(rule__If_group__Group_0__0)
{ after(grammarAccess.getIf_groupAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getIf_groupAccess().getGroup_1()); }
(rule__If_group__Group_1__0)
{ after(grammarAccess.getIf_groupAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getIf_groupAccess().getGroup_2()); }
(rule__If_group__Group_2__0)
{ after(grammarAccess.getIf_groupAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expression__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquality_expressionAccess().getEqualsSignEqualsSignKeyword_1_0_0()); }

	'==' 

{ after(grammarAccess.getEquality_expressionAccess().getEqualsSignEqualsSignKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getEquality_expressionAccess().getExclamationMarkEqualsSignKeyword_1_0_1()); }

	'!=' 

{ after(grammarAccess.getEquality_expressionAccess().getExclamationMarkEqualsSignKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expression__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelational_expressionAccess().getLessThanSignKeyword_1_0_0()); }

	'<' 

{ after(grammarAccess.getRelational_expressionAccess().getLessThanSignKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getRelational_expressionAccess().getGreaterThanSignKeyword_1_0_1()); }

	'>' 

{ after(grammarAccess.getRelational_expressionAccess().getGreaterThanSignKeyword_1_0_1()); }
)

    |(
{ before(grammarAccess.getRelational_expressionAccess().getLessThanSignEqualsSignKeyword_1_0_2()); }

	'<=' 

{ after(grammarAccess.getRelational_expressionAccess().getLessThanSignEqualsSignKeyword_1_0_2()); }
)

    |(
{ before(grammarAccess.getRelational_expressionAccess().getGreaterThanSignEqualsSignKeyword_1_0_3()); }

	'>=' 

{ after(grammarAccess.getRelational_expressionAccess().getGreaterThanSignEqualsSignKeyword_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expression__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShift_expressionAccess().getLessThanSignLessThanSignKeyword_1_0_0()); }

	'<<' 

{ after(grammarAccess.getShift_expressionAccess().getLessThanSignLessThanSignKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getShift_expressionAccess().getGreaterThanSignGreaterThanSignKeyword_1_0_1()); }

	'>>' 

{ after(grammarAccess.getShift_expressionAccess().getGreaterThanSignGreaterThanSignKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expression__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicative_expressionAccess().getAsteriskKeyword_1_0_0()); }

	'*' 

{ after(grammarAccess.getMultiplicative_expressionAccess().getAsteriskKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getMultiplicative_expressionAccess().getSolidusKeyword_1_0_1()); }

	'/' 

{ after(grammarAccess.getMultiplicative_expressionAccess().getSolidusKeyword_1_0_1()); }
)

    |(
{ before(grammarAccess.getMultiplicative_expressionAccess().getPercentSignKeyword_1_0_2()); }

	'%' 

{ after(grammarAccess.getMultiplicative_expressionAccess().getPercentSignKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pm_expression__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPm_expressionAccess().getFullStopAsteriskKeyword_1_0_0()); }

	'.*' 

{ after(grammarAccess.getPm_expressionAccess().getFullStopAsteriskKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getPm_expressionAccess().getHyphenMinusGreaterThanSignAsteriskKeyword_1_0_1()); }

	'->*' 

{ after(grammarAccess.getPm_expressionAccess().getHyphenMinusGreaterThanSignAsteriskKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expressionAccess().getGroup_0()); }
(rule__Unary_expression__Group_0__0)
{ after(grammarAccess.getUnary_expressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getUnary_expressionAccess().getGroup_1()); }
(rule__Unary_expression__Group_1__0)
{ after(grammarAccess.getUnary_expressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getUnary_expressionAccess().getGroup_2()); }
(rule__Unary_expression__Group_2__0)
{ after(grammarAccess.getUnary_expressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getUnary_expressionAccess().getGroup_3()); }
(rule__Unary_expression__Group_3__0)
{ after(grammarAccess.getUnary_expressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getUnary_expressionAccess().getGroup_4()); }
(rule__Unary_expression__Group_4__0)
{ after(grammarAccess.getUnary_expressionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expressionAccess().getPlusSignPlusSignKeyword_1_1_0()); }

	'++' 

{ after(grammarAccess.getUnary_expressionAccess().getPlusSignPlusSignKeyword_1_1_0()); }
)

    |(
{ before(grammarAccess.getUnary_expressionAccess().getHyphenMinusHyphenMinusKeyword_1_1_1()); }

	'--' 

{ after(grammarAccess.getUnary_expressionAccess().getHyphenMinusHyphenMinusKeyword_1_1_1()); }
)

    |(
{ before(grammarAccess.getUnary_expressionAccess().getUnary_operatorParserRuleCall_1_1_2()); }
	ruleunary_operator
{ after(grammarAccess.getUnary_expressionAccess().getUnary_operatorParserRuleCall_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfix_expressionAccess().getGroup_1_0()); }
(rule__Postfix_expression__Group_1_0__0)
{ after(grammarAccess.getPostfix_expressionAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getPostfix_expressionAccess().getGroup_1_1()); }
(rule__Postfix_expression__Group_1_1__0)
{ after(grammarAccess.getPostfix_expressionAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getPostfix_expressionAccess().getGroup_1_2()); }
(rule__Postfix_expression__Group_1_2__0)
{ after(grammarAccess.getPostfix_expressionAccess().getGroup_1_2()); }
)

    |(
{ before(grammarAccess.getPostfix_expressionAccess().getGroup_1_3()); }
(rule__Postfix_expression__Group_1_3__0)
{ after(grammarAccess.getPostfix_expressionAccess().getGroup_1_3()); }
)

    |(
{ before(grammarAccess.getPostfix_expressionAccess().getPlusSignPlusSignKeyword_1_4()); }

	'++' 

{ after(grammarAccess.getPostfix_expressionAccess().getPlusSignPlusSignKeyword_1_4()); }
)

    |(
{ before(grammarAccess.getPostfix_expressionAccess().getHyphenMinusHyphenMinusKeyword_1_5()); }

	'--' 

{ after(grammarAccess.getPostfix_expressionAccess().getHyphenMinusHyphenMinusKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Alternatives_1_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfix_expressionAccess().getIDENTIFIERTerminalRuleCall_1_2_2_0()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getPostfix_expressionAccess().getIDENTIFIERTerminalRuleCall_1_2_2_0()); }
)

    |(
{ before(grammarAccess.getPostfix_expressionAccess().getPseudo_destructor_nameParserRuleCall_1_2_2_1()); }
	rulepseudo_destructor_name
{ after(grammarAccess.getPostfix_expressionAccess().getPseudo_destructor_nameParserRuleCall_1_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Alternatives_1_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfix_expressionAccess().getIDENTIFIERTerminalRuleCall_1_3_2_0()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getPostfix_expressionAccess().getIDENTIFIERTerminalRuleCall_1_3_2_0()); }
)

    |(
{ before(grammarAccess.getPostfix_expressionAccess().getPseudo_destructor_nameParserRuleCall_1_3_2_1()); }
	rulepseudo_destructor_name
{ after(grammarAccess.getPostfix_expressionAccess().getPseudo_destructor_nameParserRuleCall_1_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo_destructor_name__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudo_destructor_nameAccess().getGroup_0()); }
(rule__Pseudo_destructor_name__Group_0__0)
{ after(grammarAccess.getPseudo_destructor_nameAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPseudo_destructor_nameAccess().getGroup_1()); }
(rule__Pseudo_destructor_name__Group_1__0)
{ after(grammarAccess.getPseudo_destructor_nameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_or_namespace_name__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_or_namespace_nameAccess().getClass_nameParserRuleCall_0()); }
	ruleclass_name
{ after(grammarAccess.getClass_or_namespace_nameAccess().getClass_nameParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getClass_or_namespace_nameAccess().getNamespace_nameParserRuleCall_1()); }
	rulenamespace_name
{ after(grammarAccess.getClass_or_namespace_nameAccess().getNamespace_nameParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_name__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_nameAccess().getIDENTIFIERTerminalRuleCall_0()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getClass_nameAccess().getIDENTIFIERTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getClass_nameAccess().getTemplate_idParserRuleCall_1()); }
	ruletemplate_id
{ after(grammarAccess.getClass_nameAccess().getTemplate_idParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Template_argument__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplate_argumentAccess().getAssignment_expressionParserRuleCall_0()); }
	ruleassignment_expression
{ after(grammarAccess.getTemplate_argumentAccess().getAssignment_expressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTemplate_argumentAccess().getIDENTIFIERTerminalRuleCall_1()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getTemplate_argumentAccess().getIDENTIFIERTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTemplate_argumentAccess().getId_expressionParserRuleCall_2()); }
	ruleid_expression
{ after(grammarAccess.getTemplate_argumentAccess().getId_expressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Id_expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getId_expressionAccess().getUnqualified_idParserRuleCall_0()); }
	ruleunqualified_id
{ after(grammarAccess.getId_expressionAccess().getUnqualified_idParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getId_expressionAccess().getQualified_idParserRuleCall_1()); }
	rulequalified_id
{ after(grammarAccess.getId_expressionAccess().getQualified_idParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unqualified_id__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnqualified_idAccess().getIDENTIFIERTerminalRuleCall_0()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getUnqualified_idAccess().getIDENTIFIERTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUnqualified_idAccess().getOperator_function_idParserRuleCall_1()); }
	ruleoperator_function_id
{ after(grammarAccess.getUnqualified_idAccess().getOperator_function_idParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getUnqualified_idAccess().getConversion_function_idParserRuleCall_2()); }
	ruleconversion_function_id
{ after(grammarAccess.getUnqualified_idAccess().getConversion_function_idParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getUnqualified_idAccess().getGroup_3()); }
(rule__Unqualified_id__Group_3__0)
{ after(grammarAccess.getUnqualified_idAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getUnqualified_idAccess().getTemplate_idParserRuleCall_4()); }
	ruletemplate_id
{ after(grammarAccess.getUnqualified_idAccess().getTemplate_idParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAccess().getNewKeyword_0()); }

	'new' 

{ after(grammarAccess.getOperatorAccess().getNewKeyword_0()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getDeleteKeyword_1()); }

	'delete' 

{ after(grammarAccess.getOperatorAccess().getDeleteKeyword_1()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getNewKeyword_2()); }

	'new[]' 

{ after(grammarAccess.getOperatorAccess().getNewKeyword_2()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getDeleteKeyword_3()); }

	'delete[]' 

{ after(grammarAccess.getOperatorAccess().getDeleteKeyword_3()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getPlusSignKeyword_4()); }

	'+' 

{ after(grammarAccess.getOperatorAccess().getPlusSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getHyphenMinusKeyword_5()); }

	'-' 

{ after(grammarAccess.getOperatorAccess().getHyphenMinusKeyword_5()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getAsteriskKeyword_6()); }

	'*' 

{ after(grammarAccess.getOperatorAccess().getAsteriskKeyword_6()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getSolidusKeyword_7()); }

	'/' 

{ after(grammarAccess.getOperatorAccess().getSolidusKeyword_7()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getPercentSignKeyword_8()); }

	'%' 

{ after(grammarAccess.getOperatorAccess().getPercentSignKeyword_8()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getCircumflexAccentKeyword_9()); }

	'^' 

{ after(grammarAccess.getOperatorAccess().getCircumflexAccentKeyword_9()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getAmpersandKeyword_10()); }

	'&' 

{ after(grammarAccess.getOperatorAccess().getAmpersandKeyword_10()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getVerticalLineKeyword_11()); }

	'|' 

{ after(grammarAccess.getOperatorAccess().getVerticalLineKeyword_11()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getTildeKeyword_12()); }

	'~' 

{ after(grammarAccess.getOperatorAccess().getTildeKeyword_12()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getExclamationMarkKeyword_13()); }

	'!' 

{ after(grammarAccess.getOperatorAccess().getExclamationMarkKeyword_13()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getEqualsSignKeyword_14()); }

	'=' 

{ after(grammarAccess.getOperatorAccess().getEqualsSignKeyword_14()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getLessThanSignKeyword_15()); }

	'<' 

{ after(grammarAccess.getOperatorAccess().getLessThanSignKeyword_15()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getGreaterThanSignKeyword_16()); }

	'>' 

{ after(grammarAccess.getOperatorAccess().getGreaterThanSignKeyword_16()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getPlusSignEqualsSignKeyword_17()); }

	'+=' 

{ after(grammarAccess.getOperatorAccess().getPlusSignEqualsSignKeyword_17()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getHyphenMinusEqualsSignKeyword_18()); }

	'-=' 

{ after(grammarAccess.getOperatorAccess().getHyphenMinusEqualsSignKeyword_18()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getAsteriskEqualsSignKeyword_19()); }

	'*=' 

{ after(grammarAccess.getOperatorAccess().getAsteriskEqualsSignKeyword_19()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getSolidusEqualsSignKeyword_20()); }

	'/=' 

{ after(grammarAccess.getOperatorAccess().getSolidusEqualsSignKeyword_20()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getPercentSignEqualsSignKeyword_21()); }

	'%=' 

{ after(grammarAccess.getOperatorAccess().getPercentSignEqualsSignKeyword_21()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getCircumflexAccentEqualsSignKeyword_22()); }

	'^=' 

{ after(grammarAccess.getOperatorAccess().getCircumflexAccentEqualsSignKeyword_22()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getAmpersandEqualsSignKeyword_23()); }

	'&=' 

{ after(grammarAccess.getOperatorAccess().getAmpersandEqualsSignKeyword_23()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getVerticalLineEqualsSignKeyword_24()); }

	'|=' 

{ after(grammarAccess.getOperatorAccess().getVerticalLineEqualsSignKeyword_24()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getLessThanSignLessThanSignKeyword_25()); }

	'<<' 

{ after(grammarAccess.getOperatorAccess().getLessThanSignLessThanSignKeyword_25()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getGreaterThanSignGreaterThanSignKeyword_26()); }

	'>>' 

{ after(grammarAccess.getOperatorAccess().getGreaterThanSignGreaterThanSignKeyword_26()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getLessThanSignLessThanSignEqualsSignKeyword_27()); }

	'<<=' 

{ after(grammarAccess.getOperatorAccess().getLessThanSignLessThanSignEqualsSignKeyword_27()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_28()); }

	'>>=' 

{ after(grammarAccess.getOperatorAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_28()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getEqualsSignEqualsSignKeyword_29()); }

	'==' 

{ after(grammarAccess.getOperatorAccess().getEqualsSignEqualsSignKeyword_29()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getExclamationMarkEqualsSignKeyword_30()); }

	'!=' 

{ after(grammarAccess.getOperatorAccess().getExclamationMarkEqualsSignKeyword_30()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getLessThanSignEqualsSignKeyword_31()); }

	'<=' 

{ after(grammarAccess.getOperatorAccess().getLessThanSignEqualsSignKeyword_31()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getGreaterThanSignEqualsSignKeyword_32()); }

	'>=' 

{ after(grammarAccess.getOperatorAccess().getGreaterThanSignEqualsSignKeyword_32()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getAmpersandAmpersandKeyword_33()); }

	'&&' 

{ after(grammarAccess.getOperatorAccess().getAmpersandAmpersandKeyword_33()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getVerticalLineVerticalLineKeyword_34()); }

	'||' 

{ after(grammarAccess.getOperatorAccess().getVerticalLineVerticalLineKeyword_34()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getPlusSignPlusSignKeyword_35()); }

	'++' 

{ after(grammarAccess.getOperatorAccess().getPlusSignPlusSignKeyword_35()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getHyphenMinusHyphenMinusKeyword_36()); }

	'--' 

{ after(grammarAccess.getOperatorAccess().getHyphenMinusHyphenMinusKeyword_36()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getCommaKeyword_37()); }

	',' 

{ after(grammarAccess.getOperatorAccess().getCommaKeyword_37()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getHyphenMinusGreaterThanSignAsteriskKeyword_38()); }

	'->*' 

{ after(grammarAccess.getOperatorAccess().getHyphenMinusGreaterThanSignAsteriskKeyword_38()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getHyphenMinusGreaterThanSignKeyword_39()); }

	'->' 

{ after(grammarAccess.getOperatorAccess().getHyphenMinusGreaterThanSignKeyword_39()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getLeftParenthesisRightParenthesisKeyword_40()); }

	'()' 

{ after(grammarAccess.getOperatorAccess().getLeftParenthesisRightParenthesisKeyword_40()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getLeftSquareBracketRightSquareBracketKeyword_41()); }

	'[]' 

{ after(grammarAccess.getOperatorAccess().getLeftSquareBracketRightSquareBracketKeyword_41()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_operator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_operatorAccess().getAsteriskKeyword_0()); }

	'*' 

{ after(grammarAccess.getUnary_operatorAccess().getAsteriskKeyword_0()); }
)

    |(
{ before(grammarAccess.getUnary_operatorAccess().getAmpersandKeyword_1()); }

	'&' 

{ after(grammarAccess.getUnary_operatorAccess().getAmpersandKeyword_1()); }
)

    |(
{ before(grammarAccess.getUnary_operatorAccess().getPlusSignKeyword_2()); }

	'+' 

{ after(grammarAccess.getUnary_operatorAccess().getPlusSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getUnary_operatorAccess().getHyphenMinusKeyword_3()); }

	'-' 

{ after(grammarAccess.getUnary_operatorAccess().getHyphenMinusKeyword_3()); }
)

    |(
{ before(grammarAccess.getUnary_operatorAccess().getExclamationMarkKeyword_4()); }

	'!' 

{ after(grammarAccess.getUnary_operatorAccess().getExclamationMarkKeyword_4()); }
)

    |(
{ before(grammarAccess.getUnary_operatorAccess().getTildeKeyword_5()); }

	'~' 

{ after(grammarAccess.getUnary_operatorAccess().getTildeKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Preprocessing_token__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreprocessing_tokenAccess().getIDENTIFIERTerminalRuleCall_0()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getPreprocessing_tokenAccess().getIDENTIFIERTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPreprocessing_tokenAccess().getHEADERNAMETerminalRuleCall_1()); }
	RULE_HEADERNAME
{ after(grammarAccess.getPreprocessing_tokenAccess().getHEADERNAMETerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPreprocessing_tokenAccess().getPPNUMBERTerminalRuleCall_2()); }
	RULE_PPNUMBER
{ after(grammarAccess.getPreprocessing_tokenAccess().getPPNUMBERTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPreprocessing_tokenAccess().getPPOPorPUNCTerminalRuleCall_3()); }
	RULE_PPOPORPUNC
{ after(grammarAccess.getPreprocessing_tokenAccess().getPPOPorPUNCTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getGroup_0()); }
(rule__Control_line__Group_0__0)
{ after(grammarAccess.getControl_lineAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getControl_lineAccess().getGroup_1()); }
(rule__Control_line__Group_1__0)
{ after(grammarAccess.getControl_lineAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getControl_lineAccess().getGroup_2()); }
(rule__Control_line__Group_2__0)
{ after(grammarAccess.getControl_lineAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getControl_lineAccess().getGroup_3()); }
(rule__Control_line__Group_3__0)
{ after(grammarAccess.getControl_lineAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getControl_lineAccess().getGroup_4()); }
(rule__Control_line__Group_4__0)
{ after(grammarAccess.getControl_lineAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getControl_lineAccess().getGroup_5()); }
(rule__Control_line__Group_5__0)
{ after(grammarAccess.getControl_lineAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getControl_lineAccess().getGroup_6()); }
(rule__Control_line__Group_6__0)
{ after(grammarAccess.getControl_lineAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getControl_lineAccess().getGroup_7()); }
(rule__Control_line__Group_7__0)
{ after(grammarAccess.getControl_lineAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SIGN__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSIGNAccess().getPlusSignKeyword_0()); }

	'+' 

{ after(grammarAccess.getSIGNAccess().getPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getSIGNAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getSIGNAccess().getHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__VarDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDecl__Group__0__Impl
	rule__VarDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getVarDeclAction_0()); }
(

)
{ after(grammarAccess.getVarDeclAccess().getVarDeclAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDecl__Group__1__Impl
	rule__VarDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getTypeAssignment_1()); }
(rule__VarDecl__TypeAssignment_1)
{ after(grammarAccess.getVarDeclAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getNameAssignment_2()); }
(rule__VarDecl__NameAssignment_2)
{ after(grammarAccess.getVarDeclAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Simple_type_specifier__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_type_specifier__Group_0__0__Impl
	rule__Simple_type_specifier__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_type_specifier__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_type_specifierAccess().getIntTypeAction_0_0()); }
(

)
{ after(grammarAccess.getSimple_type_specifierAccess().getIntTypeAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simple_type_specifier__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_type_specifier__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_type_specifier__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_type_specifierAccess().getIntKeyword_0_1()); }

	'int' 

{ after(grammarAccess.getSimple_type_specifierAccess().getIntKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Simple_type_specifier__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_type_specifier__Group_1__0__Impl
	rule__Simple_type_specifier__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_type_specifier__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_type_specifierAccess().getBoolTypeAction_1_0()); }
(

)
{ after(grammarAccess.getSimple_type_specifierAccess().getBoolTypeAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simple_type_specifier__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_type_specifier__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_type_specifier__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_type_specifierAccess().getBoolKeyword_1_1()); }

	'bool' 

{ after(grammarAccess.getSimple_type_specifierAccess().getBoolKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Group_part__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group_part__Group_0__0__Impl
	rule__Group_part__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Group_part__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroup_partAccess().getPp_tokensParserRuleCall_0_0()); }
(	rulepp_tokens)?
{ after(grammarAccess.getGroup_partAccess().getPp_tokensParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group_part__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group_part__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Group_part__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroup_partAccess().getNew_lineParserRuleCall_0_1()); }
	rulenew_line
{ after(grammarAccess.getGroup_partAccess().getNew_lineParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__If_action__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_action__Group__0__Impl
	rule__If_action__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If_action__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_actionAccess().getIf_groupParserRuleCall_0()); }
	ruleif_group
{ after(grammarAccess.getIf_actionAccess().getIf_groupParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_action__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_action__Group__1__Impl
	rule__If_action__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If_action__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_actionAccess().getElif_groupsParserRuleCall_1()); }
(	ruleelif_groups)?
{ after(grammarAccess.getIf_actionAccess().getElif_groupsParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_action__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_action__Group__2__Impl
	rule__If_action__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If_action__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_actionAccess().getElse_groupParserRuleCall_2()); }
(	ruleelse_group)?
{ after(grammarAccess.getIf_actionAccess().getElse_groupParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_action__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_action__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If_action__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_actionAccess().getEndif_lineParserRuleCall_3()); }
	ruleendif_line
{ after(grammarAccess.getIf_actionAccess().getEndif_lineParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__If_group__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_group__Group_0__0__Impl
	rule__If_group__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If_group__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_groupAccess().getIfKeyword_0_0()); }

	'#if' 

{ after(grammarAccess.getIf_groupAccess().getIfKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_group__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_group__Group_0__1__Impl
	rule__If_group__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If_group__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_groupAccess().getConstant_expressionParserRuleCall_0_1()); }
	ruleconstant_expression
{ after(grammarAccess.getIf_groupAccess().getConstant_expressionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_group__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_group__Group_0__2__Impl
	rule__If_group__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If_group__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_groupAccess().getNew_lineParserRuleCall_0_2()); }
	rulenew_line
{ after(grammarAccess.getIf_groupAccess().getNew_lineParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_group__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_group__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If_group__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_groupAccess().getGroupParserRuleCall_0_3()); }
(	rulegroup)?
{ after(grammarAccess.getIf_groupAccess().getGroupParserRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__If_group__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_group__Group_1__0__Impl
	rule__If_group__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If_group__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_groupAccess().getIfdefKeyword_1_0()); }

	'#ifdef' 

{ after(grammarAccess.getIf_groupAccess().getIfdefKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_group__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_group__Group_1__1__Impl
	rule__If_group__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If_group__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_groupAccess().getIDENTIFIERTerminalRuleCall_1_1()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getIf_groupAccess().getIDENTIFIERTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_group__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_group__Group_1__2__Impl
	rule__If_group__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If_group__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_groupAccess().getNew_lineParserRuleCall_1_2()); }
	rulenew_line
{ after(grammarAccess.getIf_groupAccess().getNew_lineParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_group__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_group__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If_group__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_groupAccess().getGroupParserRuleCall_1_3()); }
(	rulegroup)?
{ after(grammarAccess.getIf_groupAccess().getGroupParserRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__If_group__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_group__Group_2__0__Impl
	rule__If_group__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If_group__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_groupAccess().getIfndefKeyword_2_0()); }

	'#ifndef' 

{ after(grammarAccess.getIf_groupAccess().getIfndefKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_group__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_group__Group_2__1__Impl
	rule__If_group__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If_group__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_groupAccess().getIDENTIFIERTerminalRuleCall_2_1()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getIf_groupAccess().getIDENTIFIERTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_group__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_group__Group_2__2__Impl
	rule__If_group__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If_group__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_groupAccess().getNew_lineParserRuleCall_2_2()); }
	rulenew_line
{ after(grammarAccess.getIf_groupAccess().getNew_lineParserRuleCall_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_group__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_group__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If_group__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_groupAccess().getGroupParserRuleCall_2_3()); }
(	rulegroup)?
{ after(grammarAccess.getIf_groupAccess().getGroupParserRuleCall_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Elif_group__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Elif_group__Group__0__Impl
	rule__Elif_group__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Elif_group__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElif_groupAccess().getElifKeyword_0()); }

	'#elif' 

{ after(grammarAccess.getElif_groupAccess().getElifKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Elif_group__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Elif_group__Group__1__Impl
	rule__Elif_group__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Elif_group__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElif_groupAccess().getConstant_expressionParserRuleCall_1()); }
	ruleconstant_expression
{ after(grammarAccess.getElif_groupAccess().getConstant_expressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Elif_group__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Elif_group__Group__2__Impl
	rule__Elif_group__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Elif_group__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElif_groupAccess().getNew_lineParserRuleCall_2()); }
	rulenew_line
{ after(grammarAccess.getElif_groupAccess().getNew_lineParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Elif_group__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Elif_group__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Elif_group__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElif_groupAccess().getGroupParserRuleCall_3()); }
(	rulegroup)?
{ after(grammarAccess.getElif_groupAccess().getGroupParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group__0__Impl
	rule__Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementAction_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getStatementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getVariavelAssignment_1()); }
(rule__Statement__VariavelAssignment_1)
{ after(grammarAccess.getStatementAccess().getVariavelAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Simple_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_declaration__Group__0__Impl
	rule__Simple_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_declarationAccess().getVariavelAssignment_0()); }
(rule__Simple_declaration__VariavelAssignment_0)
{ after(grammarAccess.getSimple_declarationAccess().getVariavelAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simple_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_declaration__Group__1__Impl
	rule__Simple_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_declarationAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getSimple_declarationAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simple_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_declaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_declarationAccess().getNew_lineParserRuleCall_2()); }
	rulenew_line
{ after(grammarAccess.getSimple_declarationAccess().getNew_lineParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Block_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block_declaration__Group__0__Impl
	rule__Block_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlock_declarationAccess().getBlock_declarationAction_0()); }
(

)
{ after(grammarAccess.getBlock_declarationAccess().getBlock_declarationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block_declaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlock_declarationAccess().getVariavelAssignment_1()); }
(rule__Block_declaration__VariavelAssignment_1)
{ after(grammarAccess.getBlock_declarationAccess().getVariavelAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Conditional_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expression__Group__0__Impl
	rule__Conditional_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_expressionAccess().getLogical_or_expressionParserRuleCall_0()); }
	rulelogical_or_expression
{ after(grammarAccess.getConditional_expressionAccess().getLogical_or_expressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_expressionAccess().getGroup_1()); }
(rule__Conditional_expression__Group_1__0)?
{ after(grammarAccess.getConditional_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Conditional_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expression__Group_1__0__Impl
	rule__Conditional_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_expressionAccess().getQuestionMarkKeyword_1_0()); }

	'?' 

{ after(grammarAccess.getConditional_expressionAccess().getQuestionMarkKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expression__Group_1__1__Impl
	rule__Conditional_expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_expressionAccess().getExpressionParserRuleCall_1_1()); }
	ruleexpression
{ after(grammarAccess.getConditional_expressionAccess().getExpressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expression__Group_1__2__Impl
	rule__Conditional_expression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_expressionAccess().getColonKeyword_1_2()); }

	':' 

{ after(grammarAccess.getConditional_expressionAccess().getColonKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expression__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expression__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_expressionAccess().getAssignment_expressionParserRuleCall_1_3()); }
	ruleassignment_expression
{ after(grammarAccess.getConditional_expressionAccess().getAssignment_expressionParserRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Logical_or_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_or_expression__Group__0__Impl
	rule__Logical_or_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_or_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_or_expressionAccess().getLogical_and_expressionParserRuleCall_0()); }
	rulelogical_and_expression
{ after(grammarAccess.getLogical_or_expressionAccess().getLogical_and_expressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Logical_or_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_or_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_or_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_or_expressionAccess().getGroup_1()); }
(rule__Logical_or_expression__Group_1__0)*
{ after(grammarAccess.getLogical_or_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Logical_or_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_or_expression__Group_1__0__Impl
	rule__Logical_or_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_or_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_or_expressionAccess().getVerticalLineVerticalLineKeyword_1_0()); }

	'||' 

{ after(grammarAccess.getLogical_or_expressionAccess().getVerticalLineVerticalLineKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Logical_or_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_or_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_or_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_or_expressionAccess().getLogical_and_expressionParserRuleCall_1_1()); }
	rulelogical_and_expression
{ after(grammarAccess.getLogical_or_expressionAccess().getLogical_and_expressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Logical_and_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_and_expression__Group__0__Impl
	rule__Logical_and_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_and_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_and_expressionAccess().getInclusive_or_expressionParserRuleCall_0()); }
	ruleinclusive_or_expression
{ after(grammarAccess.getLogical_and_expressionAccess().getInclusive_or_expressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Logical_and_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_and_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_and_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_and_expressionAccess().getGroup_1()); }
(rule__Logical_and_expression__Group_1__0)*
{ after(grammarAccess.getLogical_and_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Logical_and_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_and_expression__Group_1__0__Impl
	rule__Logical_and_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_and_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_and_expressionAccess().getAmpersandAmpersandKeyword_1_0()); }

	'&&' 

{ after(grammarAccess.getLogical_and_expressionAccess().getAmpersandAmpersandKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Logical_and_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_and_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_and_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_and_expressionAccess().getInclusive_or_expressionParserRuleCall_1_1()); }
	ruleinclusive_or_expression
{ after(grammarAccess.getLogical_and_expressionAccess().getInclusive_or_expressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Inclusive_or_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Inclusive_or_expression__Group__0__Impl
	rule__Inclusive_or_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inclusive_or_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInclusive_or_expressionAccess().getExclusive_or_expressionParserRuleCall_0()); }
	ruleexclusive_or_expression
{ after(grammarAccess.getInclusive_or_expressionAccess().getExclusive_or_expressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Inclusive_or_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Inclusive_or_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inclusive_or_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInclusive_or_expressionAccess().getGroup_1()); }
(rule__Inclusive_or_expression__Group_1__0)*
{ after(grammarAccess.getInclusive_or_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Inclusive_or_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Inclusive_or_expression__Group_1__0__Impl
	rule__Inclusive_or_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inclusive_or_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInclusive_or_expressionAccess().getVerticalLineKeyword_1_0()); }

	'|' 

{ after(grammarAccess.getInclusive_or_expressionAccess().getVerticalLineKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Inclusive_or_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Inclusive_or_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inclusive_or_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInclusive_or_expressionAccess().getExclusive_or_expressionParserRuleCall_1_1()); }
	ruleexclusive_or_expression
{ after(grammarAccess.getInclusive_or_expressionAccess().getExclusive_or_expressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Exclusive_or_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exclusive_or_expression__Group__0__Impl
	rule__Exclusive_or_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exclusive_or_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExclusive_or_expressionAccess().getAnd_expressionParserRuleCall_0()); }
	ruleand_expression
{ after(grammarAccess.getExclusive_or_expressionAccess().getAnd_expressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exclusive_or_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exclusive_or_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exclusive_or_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExclusive_or_expressionAccess().getGroup_1()); }
(rule__Exclusive_or_expression__Group_1__0)*
{ after(grammarAccess.getExclusive_or_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Exclusive_or_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exclusive_or_expression__Group_1__0__Impl
	rule__Exclusive_or_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exclusive_or_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExclusive_or_expressionAccess().getCircumflexAccentKeyword_1_0()); }

	'^' 

{ after(grammarAccess.getExclusive_or_expressionAccess().getCircumflexAccentKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exclusive_or_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exclusive_or_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exclusive_or_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExclusive_or_expressionAccess().getAnd_expressionParserRuleCall_1_1()); }
	ruleand_expression
{ after(grammarAccess.getExclusive_or_expressionAccess().getAnd_expressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__And_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And_expression__Group__0__Impl
	rule__And_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnd_expressionAccess().getEquality_expressionParserRuleCall_0()); }
	ruleequality_expression
{ after(grammarAccess.getAnd_expressionAccess().getEquality_expressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnd_expressionAccess().getGroup_1()); }
(rule__And_expression__Group_1__0)*
{ after(grammarAccess.getAnd_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__And_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And_expression__Group_1__0__Impl
	rule__And_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnd_expressionAccess().getAmpersandKeyword_1_0()); }

	'&' 

{ after(grammarAccess.getAnd_expressionAccess().getAmpersandKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnd_expressionAccess().getEquality_expressionParserRuleCall_1_1()); }
	ruleequality_expression
{ after(grammarAccess.getAnd_expressionAccess().getEquality_expressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Equality_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equality_expression__Group__0__Impl
	rule__Equality_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquality_expressionAccess().getRelational_expressionParserRuleCall_0()); }
	rulerelational_expression
{ after(grammarAccess.getEquality_expressionAccess().getRelational_expressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Equality_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equality_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquality_expressionAccess().getGroup_1()); }
(rule__Equality_expression__Group_1__0)*
{ after(grammarAccess.getEquality_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Equality_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equality_expression__Group_1__0__Impl
	rule__Equality_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquality_expressionAccess().getAlternatives_1_0()); }
(rule__Equality_expression__Alternatives_1_0)
{ after(grammarAccess.getEquality_expressionAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Equality_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equality_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquality_expressionAccess().getRelational_expressionParserRuleCall_1_1()); }
	rulerelational_expression
{ after(grammarAccess.getEquality_expressionAccess().getRelational_expressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relational_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational_expression__Group__0__Impl
	rule__Relational_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelational_expressionAccess().getShift_expressionParserRuleCall_0()); }
	ruleshift_expression
{ after(grammarAccess.getRelational_expressionAccess().getShift_expressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelational_expressionAccess().getGroup_1()); }
(rule__Relational_expression__Group_1__0)*
{ after(grammarAccess.getRelational_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relational_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational_expression__Group_1__0__Impl
	rule__Relational_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelational_expressionAccess().getAlternatives_1_0()); }
(rule__Relational_expression__Alternatives_1_0)
{ after(grammarAccess.getRelational_expressionAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelational_expressionAccess().getShift_expressionParserRuleCall_1_1()); }
	ruleshift_expression
{ after(grammarAccess.getRelational_expressionAccess().getShift_expressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Shift_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Shift_expression__Group__0__Impl
	rule__Shift_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShift_expressionAccess().getAdditive_expressionParserRuleCall_0()); }
	ruleadditive_expression
{ after(grammarAccess.getShift_expressionAccess().getAdditive_expressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Shift_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Shift_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShift_expressionAccess().getGroup_1()); }
(rule__Shift_expression__Group_1__0)*
{ after(grammarAccess.getShift_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Shift_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Shift_expression__Group_1__0__Impl
	rule__Shift_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShift_expressionAccess().getAlternatives_1_0()); }
(rule__Shift_expression__Alternatives_1_0)
{ after(grammarAccess.getShift_expressionAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Shift_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Shift_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShift_expressionAccess().getAdditive_expressionParserRuleCall_1_1()); }
	ruleadditive_expression
{ after(grammarAccess.getShift_expressionAccess().getAdditive_expressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Additive_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Additive_expression__Group__0__Impl
	rule__Additive_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditive_expressionAccess().getMultiplicative_expressionParserRuleCall_0()); }
	rulemultiplicative_expression
{ after(grammarAccess.getAdditive_expressionAccess().getMultiplicative_expressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Additive_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Additive_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditive_expressionAccess().getGroup_1()); }
(rule__Additive_expression__Group_1__0)*
{ after(grammarAccess.getAdditive_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Additive_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Additive_expression__Group_1__0__Impl
	rule__Additive_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditive_expressionAccess().getSIGNParserRuleCall_1_0()); }
	ruleSIGN
{ after(grammarAccess.getAdditive_expressionAccess().getSIGNParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Additive_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Additive_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditive_expressionAccess().getMultiplicative_expressionParserRuleCall_1_1()); }
	rulemultiplicative_expression
{ after(grammarAccess.getAdditive_expressionAccess().getMultiplicative_expressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplicative_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicative_expression__Group__0__Impl
	rule__Multiplicative_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicative_expressionAccess().getPm_expressionParserRuleCall_0()); }
	rulepm_expression
{ after(grammarAccess.getMultiplicative_expressionAccess().getPm_expressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicative_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicative_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicative_expressionAccess().getGroup_1()); }
(rule__Multiplicative_expression__Group_1__0)*
{ after(grammarAccess.getMultiplicative_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplicative_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicative_expression__Group_1__0__Impl
	rule__Multiplicative_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicative_expressionAccess().getAlternatives_1_0()); }
(rule__Multiplicative_expression__Alternatives_1_0)
{ after(grammarAccess.getMultiplicative_expressionAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicative_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicative_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicative_expressionAccess().getPm_expressionParserRuleCall_1_1()); }
	rulepm_expression
{ after(grammarAccess.getMultiplicative_expressionAccess().getPm_expressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Pm_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pm_expression__Group__0__Impl
	rule__Pm_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pm_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPm_expressionAccess().getCast_expressionParserRuleCall_0()); }
	rulecast_expression
{ after(grammarAccess.getPm_expressionAccess().getCast_expressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pm_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pm_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pm_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPm_expressionAccess().getGroup_1()); }
(rule__Pm_expression__Group_1__0)*
{ after(grammarAccess.getPm_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Pm_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pm_expression__Group_1__0__Impl
	rule__Pm_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pm_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPm_expressionAccess().getAlternatives_1_0()); }
(rule__Pm_expression__Alternatives_1_0)
{ after(grammarAccess.getPm_expressionAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pm_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pm_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pm_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPm_expressionAccess().getCast_expressionParserRuleCall_1_1()); }
	rulecast_expression
{ after(grammarAccess.getPm_expressionAccess().getCast_expressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Cast_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast_expression__Group__0__Impl
	rule__Cast_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_expressionAccess().getGroup_0()); }
(rule__Cast_expression__Group_0__0)*
{ after(grammarAccess.getCast_expressionAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cast_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_expressionAccess().getUnary_expressionParserRuleCall_1()); }
	ruleunary_expression
{ after(grammarAccess.getCast_expressionAccess().getUnary_expressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Cast_expression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast_expression__Group_0__0__Impl
	rule__Cast_expression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_expressionAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getCast_expressionAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cast_expression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast_expression__Group_0__1__Impl
	rule__Cast_expression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_expressionAccess().getIDENTIFIERTerminalRuleCall_0_1()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getCast_expressionAccess().getIDENTIFIERTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cast_expression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast_expression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_expressionAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getCast_expressionAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Unary_expression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression__Group_0__0__Impl
	rule__Unary_expression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expressionAccess().getSizeofKeyword_0_0()); }
(
	'sizeof' 
)*
{ after(grammarAccess.getUnary_expressionAccess().getSizeofKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unary_expression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expressionAccess().getPostfix_expressionParserRuleCall_0_1()); }
	rulepostfix_expression
{ after(grammarAccess.getUnary_expressionAccess().getPostfix_expressionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unary_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression__Group_1__0__Impl
	rule__Unary_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expressionAccess().getSizeofKeyword_1_0()); }
(
	'sizeof' 
)*
{ after(grammarAccess.getUnary_expressionAccess().getSizeofKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unary_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression__Group_1__1__Impl
	rule__Unary_expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expressionAccess().getAlternatives_1_1()); }
(rule__Unary_expression__Alternatives_1_1)
{ after(grammarAccess.getUnary_expressionAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unary_expression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expressionAccess().getCast_expressionParserRuleCall_1_2()); }
	rulecast_expression
{ after(grammarAccess.getUnary_expressionAccess().getCast_expressionParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Unary_expression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression__Group_2__0__Impl
	rule__Unary_expression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expressionAccess().getSizeofKeyword_2_0()); }

	'sizeof' 

{ after(grammarAccess.getUnary_expressionAccess().getSizeofKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unary_expression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression__Group_2__1__Impl
	rule__Unary_expression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expressionAccess().getLeftParenthesisKeyword_2_1()); }

	'(' 

{ after(grammarAccess.getUnary_expressionAccess().getLeftParenthesisKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unary_expression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression__Group_2__2__Impl
	rule__Unary_expression__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expressionAccess().getIDENTIFIERTerminalRuleCall_2_2()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getUnary_expressionAccess().getIDENTIFIERTerminalRuleCall_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unary_expression__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expressionAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getUnary_expressionAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Unary_expression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression__Group_3__0__Impl
	rule__Unary_expression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expressionAccess().getSizeofKeyword_3_0()); }
(
	'sizeof' 
)*
{ after(grammarAccess.getUnary_expressionAccess().getSizeofKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unary_expression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expressionAccess().getNew_expressionParserRuleCall_3_1()); }
	rulenew_expression
{ after(grammarAccess.getUnary_expressionAccess().getNew_expressionParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unary_expression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression__Group_4__0__Impl
	rule__Unary_expression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expressionAccess().getSizeofKeyword_4_0()); }
(
	'sizeof' 
)*
{ after(grammarAccess.getUnary_expressionAccess().getSizeofKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unary_expression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expressionAccess().getDelete_expressionParserRuleCall_4_1()); }
	ruledelete_expression
{ after(grammarAccess.getUnary_expressionAccess().getDelete_expressionParserRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Postfix_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix_expression__Group__0__Impl
	rule__Postfix_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfix_expressionAccess().getPrimary_expressionParserRuleCall_0()); }
	ruleprimary_expression
{ after(grammarAccess.getPostfix_expressionAccess().getPrimary_expressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfix_expressionAccess().getAlternatives_1()); }
(rule__Postfix_expression__Alternatives_1)*
{ after(grammarAccess.getPostfix_expressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Postfix_expression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix_expression__Group_1_0__0__Impl
	rule__Postfix_expression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfix_expressionAccess().getLeftSquareBracketKeyword_1_0_0()); }

	'[' 

{ after(grammarAccess.getPostfix_expressionAccess().getLeftSquareBracketKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix_expression__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix_expression__Group_1_0__1__Impl
	rule__Postfix_expression__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfix_expressionAccess().getExpressionParserRuleCall_1_0_1()); }
	ruleexpression
{ after(grammarAccess.getPostfix_expressionAccess().getExpressionParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix_expression__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix_expression__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfix_expressionAccess().getRightSquareBracketKeyword_1_0_2()); }

	']' 

{ after(grammarAccess.getPostfix_expressionAccess().getRightSquareBracketKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Postfix_expression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix_expression__Group_1_1__0__Impl
	rule__Postfix_expression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfix_expressionAccess().getLeftParenthesisKeyword_1_1_0()); }

	'(' 

{ after(grammarAccess.getPostfix_expressionAccess().getLeftParenthesisKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix_expression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix_expression__Group_1_1__1__Impl
	rule__Postfix_expression__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfix_expressionAccess().getExpression_listParserRuleCall_1_1_1()); }
(	ruleexpression_list)?
{ after(grammarAccess.getPostfix_expressionAccess().getExpression_listParserRuleCall_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix_expression__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix_expression__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfix_expressionAccess().getRightParenthesisKeyword_1_1_2()); }

	')' 

{ after(grammarAccess.getPostfix_expressionAccess().getRightParenthesisKeyword_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Postfix_expression__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix_expression__Group_1_2__0__Impl
	rule__Postfix_expression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfix_expressionAccess().getFullStopKeyword_1_2_0()); }

	'.' 

{ after(grammarAccess.getPostfix_expressionAccess().getFullStopKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix_expression__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix_expression__Group_1_2__1__Impl
	rule__Postfix_expression__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfix_expressionAccess().getTemplateKeyword_1_2_1()); }
(
	'template' 
)?
{ after(grammarAccess.getPostfix_expressionAccess().getTemplateKeyword_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix_expression__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix_expression__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfix_expressionAccess().getAlternatives_1_2_2()); }
(rule__Postfix_expression__Alternatives_1_2_2)
{ after(grammarAccess.getPostfix_expressionAccess().getAlternatives_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Postfix_expression__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix_expression__Group_1_3__0__Impl
	rule__Postfix_expression__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfix_expressionAccess().getHyphenMinusGreaterThanSignKeyword_1_3_0()); }

	'->' 

{ after(grammarAccess.getPostfix_expressionAccess().getHyphenMinusGreaterThanSignKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix_expression__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix_expression__Group_1_3__1__Impl
	rule__Postfix_expression__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfix_expressionAccess().getTemplateKeyword_1_3_1()); }
(
	'template' 
)?
{ after(grammarAccess.getPostfix_expressionAccess().getTemplateKeyword_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix_expression__Group_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix_expression__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfix_expressionAccess().getAlternatives_1_3_2()); }
(rule__Postfix_expression__Alternatives_1_3_2)
{ after(grammarAccess.getPostfix_expressionAccess().getAlternatives_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Pseudo_destructor_name__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pseudo_destructor_name__Group_0__0__Impl
	rule__Pseudo_destructor_name__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo_destructor_name__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudo_destructor_nameAccess().getColonColonKeyword_0_0()); }
(
	'::' 
)?
{ after(grammarAccess.getPseudo_destructor_nameAccess().getColonColonKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pseudo_destructor_name__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pseudo_destructor_name__Group_0__1__Impl
	rule__Pseudo_destructor_name__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo_destructor_name__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudo_destructor_nameAccess().getNested_name_specifierParserRuleCall_0_1()); }
(	rulenested_name_specifier)?
{ after(grammarAccess.getPseudo_destructor_nameAccess().getNested_name_specifierParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pseudo_destructor_name__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pseudo_destructor_name__Group_0__2__Impl
	rule__Pseudo_destructor_name__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo_destructor_name__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudo_destructor_nameAccess().getGroup_0_2()); }
(rule__Pseudo_destructor_name__Group_0_2__0)?
{ after(grammarAccess.getPseudo_destructor_nameAccess().getGroup_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pseudo_destructor_name__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pseudo_destructor_name__Group_0__3__Impl
	rule__Pseudo_destructor_name__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo_destructor_name__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudo_destructor_nameAccess().getTildeKeyword_0_3()); }

	'~' 

{ after(grammarAccess.getPseudo_destructor_nameAccess().getTildeKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pseudo_destructor_name__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pseudo_destructor_name__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo_destructor_name__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudo_destructor_nameAccess().getType_nameParserRuleCall_0_4()); }
	ruletype_name
{ after(grammarAccess.getPseudo_destructor_nameAccess().getType_nameParserRuleCall_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Pseudo_destructor_name__Group_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pseudo_destructor_name__Group_0_2__0__Impl
	rule__Pseudo_destructor_name__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo_destructor_name__Group_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudo_destructor_nameAccess().getType_nameParserRuleCall_0_2_0()); }
	ruletype_name
{ after(grammarAccess.getPseudo_destructor_nameAccess().getType_nameParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pseudo_destructor_name__Group_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pseudo_destructor_name__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo_destructor_name__Group_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudo_destructor_nameAccess().getColonColonKeyword_0_2_1()); }

	'::' 

{ after(grammarAccess.getPseudo_destructor_nameAccess().getColonColonKeyword_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Pseudo_destructor_name__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pseudo_destructor_name__Group_1__0__Impl
	rule__Pseudo_destructor_name__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo_destructor_name__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudo_destructor_nameAccess().getColonColonKeyword_1_0()); }
(
	'::' 
)?
{ after(grammarAccess.getPseudo_destructor_nameAccess().getColonColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pseudo_destructor_name__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pseudo_destructor_name__Group_1__1__Impl
	rule__Pseudo_destructor_name__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo_destructor_name__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudo_destructor_nameAccess().getNested_name_specifierParserRuleCall_1_1()); }
	rulenested_name_specifier
{ after(grammarAccess.getPseudo_destructor_nameAccess().getNested_name_specifierParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pseudo_destructor_name__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pseudo_destructor_name__Group_1__2__Impl
	rule__Pseudo_destructor_name__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo_destructor_name__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudo_destructor_nameAccess().getTemplateKeyword_1_2()); }

	'template' 

{ after(grammarAccess.getPseudo_destructor_nameAccess().getTemplateKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pseudo_destructor_name__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pseudo_destructor_name__Group_1__3__Impl
	rule__Pseudo_destructor_name__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo_destructor_name__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudo_destructor_nameAccess().getTemplate_idParserRuleCall_1_3()); }
	ruletemplate_id
{ after(grammarAccess.getPseudo_destructor_nameAccess().getTemplate_idParserRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pseudo_destructor_name__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pseudo_destructor_name__Group_1__4__Impl
	rule__Pseudo_destructor_name__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo_destructor_name__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudo_destructor_nameAccess().getColonColonKeyword_1_4()); }

	'::' 

{ after(grammarAccess.getPseudo_destructor_nameAccess().getColonColonKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pseudo_destructor_name__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pseudo_destructor_name__Group_1__5__Impl
	rule__Pseudo_destructor_name__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo_destructor_name__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudo_destructor_nameAccess().getTildeKeyword_1_5()); }

	'~' 

{ after(grammarAccess.getPseudo_destructor_nameAccess().getTildeKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pseudo_destructor_name__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pseudo_destructor_name__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo_destructor_name__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudo_destructor_nameAccess().getType_nameParserRuleCall_1_6()); }
	ruletype_name
{ after(grammarAccess.getPseudo_destructor_nameAccess().getType_nameParserRuleCall_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Nested_name_specifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_name_specifier__Group__0__Impl
	rule__Nested_name_specifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_name_specifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_name_specifierAccess().getClass_or_namespace_nameParserRuleCall_0()); }
	ruleclass_or_namespace_name
{ after(grammarAccess.getNested_name_specifierAccess().getClass_or_namespace_nameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Nested_name_specifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_name_specifier__Group__1__Impl
	rule__Nested_name_specifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_name_specifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_name_specifierAccess().getColonColonKeyword_1()); }

	'::' 

{ after(grammarAccess.getNested_name_specifierAccess().getColonColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Nested_name_specifier__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_name_specifier__Group__2__Impl
	rule__Nested_name_specifier__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_name_specifier__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_name_specifierAccess().getGroup_2()); }
(rule__Nested_name_specifier__Group_2__0)*
{ after(grammarAccess.getNested_name_specifierAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Nested_name_specifier__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_name_specifier__Group__3__Impl
	rule__Nested_name_specifier__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_name_specifier__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_name_specifierAccess().getClass_or_namespace_nameParserRuleCall_3()); }
	ruleclass_or_namespace_name
{ after(grammarAccess.getNested_name_specifierAccess().getClass_or_namespace_nameParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Nested_name_specifier__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_name_specifier__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_name_specifier__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_name_specifierAccess().getColonColonKeyword_4()); }

	'::' 

{ after(grammarAccess.getNested_name_specifierAccess().getColonColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Nested_name_specifier__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_name_specifier__Group_2__0__Impl
	rule__Nested_name_specifier__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_name_specifier__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_name_specifierAccess().getTemplateKeyword_2_0()); }
(
	'template' 
)?
{ after(grammarAccess.getNested_name_specifierAccess().getTemplateKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Nested_name_specifier__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_name_specifier__Group_2__1__Impl
	rule__Nested_name_specifier__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_name_specifier__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_name_specifierAccess().getClass_or_namespace_nameParserRuleCall_2_1()); }
	ruleclass_or_namespace_name
{ after(grammarAccess.getNested_name_specifierAccess().getClass_or_namespace_nameParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Nested_name_specifier__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nested_name_specifier__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Nested_name_specifier__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNested_name_specifierAccess().getColonColonKeyword_2_2()); }

	'::' 

{ after(grammarAccess.getNested_name_specifierAccess().getColonColonKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Template_id__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template_id__Group__0__Impl
	rule__Template_id__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Template_id__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplate_idAccess().getIDENTIFIERTerminalRuleCall_0()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getTemplate_idAccess().getIDENTIFIERTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template_id__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template_id__Group__1__Impl
	rule__Template_id__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Template_id__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplate_idAccess().getLessThanSignKeyword_1()); }

	'<' 

{ after(grammarAccess.getTemplate_idAccess().getLessThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template_id__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template_id__Group__2__Impl
	rule__Template_id__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Template_id__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplate_idAccess().getTemplate_argument_listParserRuleCall_2()); }
	ruletemplate_argument_list
{ after(grammarAccess.getTemplate_idAccess().getTemplate_argument_listParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template_id__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template_id__Group__3__Impl
	rule__Template_id__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Template_id__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplate_idAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getTemplate_idAccess().getGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template_id__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template_id__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Template_id__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplate_idAccess().getClassKeyword_4()); }

	'class' 

{ after(grammarAccess.getTemplate_idAccess().getClassKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Template_argument_list__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template_argument_list__Group__0__Impl
	rule__Template_argument_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Template_argument_list__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplate_argument_listAccess().getTemplate_argumentParserRuleCall_0()); }
	ruletemplate_argument
{ after(grammarAccess.getTemplate_argument_listAccess().getTemplate_argumentParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template_argument_list__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template_argument_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Template_argument_list__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplate_argument_listAccess().getGroup_1()); }
(rule__Template_argument_list__Group_1__0)*
{ after(grammarAccess.getTemplate_argument_listAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Template_argument_list__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template_argument_list__Group_1__0__Impl
	rule__Template_argument_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Template_argument_list__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplate_argument_listAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getTemplate_argument_listAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template_argument_list__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template_argument_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Template_argument_list__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplate_argument_listAccess().getTemplate_argumentParserRuleCall_1_1()); }
	ruletemplate_argument
{ after(grammarAccess.getTemplate_argument_listAccess().getTemplate_argumentParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unqualified_id__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unqualified_id__Group_3__0__Impl
	rule__Unqualified_id__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unqualified_id__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnqualified_idAccess().getTildeKeyword_3_0()); }

	'~' 

{ after(grammarAccess.getUnqualified_idAccess().getTildeKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unqualified_id__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unqualified_id__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unqualified_id__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnqualified_idAccess().getClass_nameParserRuleCall_3_1()); }
	ruleclass_name
{ after(grammarAccess.getUnqualified_idAccess().getClass_nameParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Operator_function_id__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operator_function_id__Group__0__Impl
	rule__Operator_function_id__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator_function_id__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperator_function_idAccess().getOperatorKeyword_0()); }

	'operator' 

{ after(grammarAccess.getOperator_function_idAccess().getOperatorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operator_function_id__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operator_function_id__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator_function_id__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperator_function_idAccess().getOperatorParserRuleCall_1()); }
	ruleoperator
{ after(grammarAccess.getOperator_function_idAccess().getOperatorParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Conversion_function_id__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conversion_function_id__Group__0__Impl
	rule__Conversion_function_id__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion_function_id__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConversion_function_idAccess().getOperatorKeyword_0()); }

	'operator' 

{ after(grammarAccess.getConversion_function_idAccess().getOperatorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conversion_function_id__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conversion_function_id__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion_function_id__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConversion_function_idAccess().getConversion_type_idParserRuleCall_1()); }
	ruleconversion_type_id
{ after(grammarAccess.getConversion_function_idAccess().getConversion_type_idParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Conversion_type_id__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conversion_type_id__Group__0__Impl
	rule__Conversion_type_id__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion_type_id__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConversion_type_idAccess().getType_specifier_seqParserRuleCall_0()); }
	ruletype_specifier_seq
{ after(grammarAccess.getConversion_type_idAccess().getType_specifier_seqParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conversion_type_id__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conversion_type_id__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion_type_id__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConversion_type_idAccess().getConversion_declaratorParserRuleCall_1()); }
(	ruleconversion_declarator)?
{ after(grammarAccess.getConversion_type_idAccess().getConversion_declaratorParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_list__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_list__Group__0__Impl
	rule__Expression_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_listAccess().getAssignment_expressionParserRuleCall_0()); }
	ruleassignment_expression
{ after(grammarAccess.getExpression_listAccess().getAssignment_expressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_list__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_listAccess().getGroup_1()); }
(rule__Expression_list__Group_1__0)*
{ after(grammarAccess.getExpression_listAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_list__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_list__Group_1__0__Impl
	rule__Expression_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_listAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getExpression_listAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_list__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_listAccess().getAssignment_expressionParserRuleCall_1_1()); }
	ruleassignment_expression
{ after(grammarAccess.getExpression_listAccess().getAssignment_expressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Else_group__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Else_group__Group__0__Impl
	rule__Else_group__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Else_group__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElse_groupAccess().getElseKeyword_0()); }

	'#else' 

{ after(grammarAccess.getElse_groupAccess().getElseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Else_group__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Else_group__Group__1__Impl
	rule__Else_group__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Else_group__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElse_groupAccess().getNew_lineParserRuleCall_1()); }
	rulenew_line
{ after(grammarAccess.getElse_groupAccess().getNew_lineParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Else_group__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Else_group__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Else_group__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElse_groupAccess().getGroupParserRuleCall_2()); }
(	rulegroup)?
{ after(grammarAccess.getElse_groupAccess().getGroupParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Endif_line__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Endif_line__Group__0__Impl
	rule__Endif_line__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Endif_line__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEndif_lineAccess().getEndifKeyword_0()); }

	'#endif' 

{ after(grammarAccess.getEndif_lineAccess().getEndifKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Endif_line__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Endif_line__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Endif_line__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEndif_lineAccess().getNew_lineParserRuleCall_1()); }
	rulenew_line
{ after(grammarAccess.getEndif_lineAccess().getNew_lineParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Control_line__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_0__0__Impl
	rule__Control_line__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getIncludeKeyword_0_0()); }

	'#include' 

{ after(grammarAccess.getControl_lineAccess().getIncludeKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_0__1__Impl
	rule__Control_line__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getPp_tokensParserRuleCall_0_1()); }
	rulepp_tokens
{ after(grammarAccess.getControl_lineAccess().getPp_tokensParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getNew_lineParserRuleCall_0_2()); }
	rulenew_line
{ after(grammarAccess.getControl_lineAccess().getNew_lineParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Control_line__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_1__0__Impl
	rule__Control_line__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getDefineKeyword_1_0()); }

	'#define' 

{ after(grammarAccess.getControl_lineAccess().getDefineKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_1__1__Impl
	rule__Control_line__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getIDENTIFIERTerminalRuleCall_1_1()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getControl_lineAccess().getIDENTIFIERTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_1__2__Impl
	rule__Control_line__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getReplacement_listParserRuleCall_1_2()); }
	rulereplacement_list
{ after(grammarAccess.getControl_lineAccess().getReplacement_listParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getNew_lineParserRuleCall_1_3()); }
	rulenew_line
{ after(grammarAccess.getControl_lineAccess().getNew_lineParserRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Control_line__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_2__0__Impl
	rule__Control_line__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getDefineKeyword_2_0()); }

	'#define' 

{ after(grammarAccess.getControl_lineAccess().getDefineKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_2__1__Impl
	rule__Control_line__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getIDENTIFIERTerminalRuleCall_2_1()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getControl_lineAccess().getIDENTIFIERTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_2__2__Impl
	rule__Control_line__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getLparenParserRuleCall_2_2()); }
	rulelparen
{ after(grammarAccess.getControl_lineAccess().getLparenParserRuleCall_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_2__3__Impl
	rule__Control_line__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getIDENTIFIERTerminalRuleCall_2_3()); }
(	RULE_IDENTIFIER)?
{ after(grammarAccess.getControl_lineAccess().getIDENTIFIERTerminalRuleCall_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_2__4__Impl
	rule__Control_line__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getRightParenthesisKeyword_2_4()); }

	')' 

{ after(grammarAccess.getControl_lineAccess().getRightParenthesisKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_2__5__Impl
	rule__Control_line__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getReplacement_listParserRuleCall_2_5()); }
	rulereplacement_list
{ after(grammarAccess.getControl_lineAccess().getReplacement_listParserRuleCall_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_2__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_2__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_2__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getNew_lineParserRuleCall_2_6()); }
	rulenew_line
{ after(grammarAccess.getControl_lineAccess().getNew_lineParserRuleCall_2_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Control_line__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_3__0__Impl
	rule__Control_line__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getUndefKeyword_3_0()); }

	'#undef' 

{ after(grammarAccess.getControl_lineAccess().getUndefKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_3__1__Impl
	rule__Control_line__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getIDENTIFIERTerminalRuleCall_3_1()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getControl_lineAccess().getIDENTIFIERTerminalRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getNew_lineParserRuleCall_3_2()); }
	rulenew_line
{ after(grammarAccess.getControl_lineAccess().getNew_lineParserRuleCall_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Control_line__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_4__0__Impl
	rule__Control_line__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getLineKeyword_4_0()); }

	'#line' 

{ after(grammarAccess.getControl_lineAccess().getLineKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_4__1__Impl
	rule__Control_line__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getPp_tokensParserRuleCall_4_1()); }
	rulepp_tokens
{ after(grammarAccess.getControl_lineAccess().getPp_tokensParserRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getNew_lineParserRuleCall_4_2()); }
	rulenew_line
{ after(grammarAccess.getControl_lineAccess().getNew_lineParserRuleCall_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Control_line__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_5__0__Impl
	rule__Control_line__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getErrorKeyword_5_0()); }

	'#error' 

{ after(grammarAccess.getControl_lineAccess().getErrorKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_5__1__Impl
	rule__Control_line__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getPp_tokensParserRuleCall_5_1()); }
(	rulepp_tokens)?
{ after(grammarAccess.getControl_lineAccess().getPp_tokensParserRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getNew_lineParserRuleCall_5_2()); }
	rulenew_line
{ after(grammarAccess.getControl_lineAccess().getNew_lineParserRuleCall_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Control_line__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_6__0__Impl
	rule__Control_line__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getPragmaKeyword_6_0()); }

	'#pragma' 

{ after(grammarAccess.getControl_lineAccess().getPragmaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_6__1__Impl
	rule__Control_line__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getPp_tokensParserRuleCall_6_1()); }
(	rulepp_tokens)?
{ after(grammarAccess.getControl_lineAccess().getPp_tokensParserRuleCall_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getNew_lineParserRuleCall_6_2()); }
	rulenew_line
{ after(grammarAccess.getControl_lineAccess().getNew_lineParserRuleCall_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Control_line__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_7__0__Impl
	rule__Control_line__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getNumberSignKeyword_7_0()); }

	'#' 

{ after(grammarAccess.getControl_lineAccess().getNumberSignKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getNew_lineParserRuleCall_7_1()); }
	rulenew_line
{ after(grammarAccess.getControl_lineAccess().getNew_lineParserRuleCall_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__ElementsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getElementsStatementParserRuleCall_0()); }
	rulestatement{ after(grammarAccess.getModelAccess().getElementsStatementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getTypeTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getVarDeclAccess().getTypeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getNameIDENTIFIERTerminalRuleCall_2_0()); }
	RULE_IDENTIFIER{ after(grammarAccess.getVarDeclAccess().getNameIDENTIFIERTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__VariavelAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getVariavelDeclaration_statementParserRuleCall_1_0()); }
	ruledeclaration_statement{ after(grammarAccess.getStatementAccess().getVariavelDeclaration_statementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_declaration__VariavelAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_declarationAccess().getVariavelVarDeclParserRuleCall_0_0()); }
	ruleVarDecl{ after(grammarAccess.getSimple_declarationAccess().getVariavelVarDeclParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_statement__VariaveisAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaration_statementAccess().getVariaveisBlock_declarationParserRuleCall_0()); }
	ruleblock_declaration{ after(grammarAccess.getDeclaration_statementAccess().getVariaveisBlock_declarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block_declaration__VariavelAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlock_declarationAccess().getVariavelSimple_declarationParserRuleCall_1_0()); }
	rulesimple_declaration{ after(grammarAccess.getBlock_declarationAccess().getVariavelSimple_declarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_HEADERNAME : (RULE_STRING|'<' ('a'..'z'|'A'..'Z'|'.')+ '>');

RULE_INTEGERLITERAL : ('1'..'9' ('0'..'9')* (('u'|'U') ('l'|'L'|'ll'|'LL')?|('l'|'L'|'ll'|'LL') ('u'|'U')?)?|'0' ('0'..'7')* (('u'|'U') ('l'|'L'|'ll'|'LL')?|('l'|'L'|'ll'|'LL') ('u'|'U')?)?|('0x'|'0X') ('0'..'9'|'a'..'f'|'A'..'F')+ (('u'|'U') ('l'|'L'|'ll'|'LL')?|('l'|'L'|'ll'|'LL') ('u'|'U')?)?);

RULE_BOOLEANLITERAL : ('false'|'true');

RULE_POINTERLITERAL : 'nullptr';

RULE_PPNUMBER : ('0'..'9'|'.' '0'..'9') ('0'..'9'|('a'..'z'|'A'..'Z'|'_')|'e' ('+'|'-')|'E' ('+'|'-')|'.')*;

RULE_LITERAL : (RULE_INTEGERLITERAL|RULE_BOOLEANLITERAL|RULE_POINTERLITERAL);

RULE_KEYWORD : ('alignas'|'alignof'|'asm'|'auto'|'bool'|'break'|'case'|'catch'|'char'|'char16_t'|'char32_t'|'class'|'const'|'constexpr'|'const_cast'|'continue'|'decltype'|'default'|'delete'|'do'|'double'|'dynamic_cast'|'else'|'enum'|'explicit'|'export'|'extern'|'false'|'float'|'for'|'friend'|'goto'|'if'|'inline'|'int'|'long'|'mutable'|'namespace'|'new'|'noexcept'|'nullptr'|'operator'|'private'|'protected'|'public'|'register'|'reinterpret_cast'|'return'|'short'|'signed'|'sizeof'|'static'|'static_assert'|'static_cast'|'struct'|'switch'|'template'|'this'|'thread_local'|'throw'|'true'|'try'|'typedef'|'typeid'|'typename'|'union'|'unsigned'|'using'|'virtual'|'void'|'volatile'|'wchar_t'|'while');

RULE_PPOPORPUNC : ('{'|'}'|'['|']'|'#'|'##'|'('|')'|'<:'|':>'|'<%'|'%>'|'%:'|'%:%:'|';'|':'|'...'|'new'|'delete'|'?'|'::'|'.'|'.*'|'+'|'-'|'*'|'/'|'%'|'^'|'&'|'|'|'~'|'!'|'='|'<'|'>'|'+='|'-='|'*='|'/='|'%='|'^='|'&='|'|='|'<<'|'>>'|'<<='|'>>='|'=='|'!='|'<='|'>='|'&&'|'||'|'++'|'--'|','|'->*'|'->'|'and'|'and_eq'|'bitand'|'bitor'|'compl'|'not'|'not_eq'|'or'|'or_eq'|'xor'|'xor_eq');

RULE_IDENTIFIER : ('a'..'z'|'A'..'Z'|'_') ('0'..'9'|'A'..'Z'|'a'..'z'|'_')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


