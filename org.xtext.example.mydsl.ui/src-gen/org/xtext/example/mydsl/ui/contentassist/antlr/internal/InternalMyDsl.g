/*
* generated by Xtext
*/
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.xtext.example.mydsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {
 
 	private MyDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getBodyParserRuleCall()); }
	ruleBody
{ after(grammarAccess.getModelAccess().getBodyParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBody
entryRuleBody 
:
{ before(grammarAccess.getBodyRule()); }
	 ruleBody
{ after(grammarAccess.getBodyRule()); } 
	 EOF 
;

// Rule Body
ruleBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBodyAccess().getGroup()); }
(rule__Body__Group__0)
{ after(grammarAccess.getBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleelif_group
entryRuleelif_group 
:
{ before(grammarAccess.getElif_groupRule()); }
	 ruleelif_group
{ after(grammarAccess.getElif_groupRule()); } 
	 EOF 
;

// Rule elif_group
ruleelif_group
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElif_groupAccess().getGroup()); }
(rule__Elif_group__Group__0)
{ after(grammarAccess.getElif_groupAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconstant_expression
entryRuleconstant_expression 
:
{ before(grammarAccess.getConstant_expressionRule()); }
	 ruleconstant_expression
{ after(grammarAccess.getConstant_expressionRule()); } 
	 EOF 
;

// Rule constant_expression
ruleconstant_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstant_expressionAccess().getConditional_expressionParserRuleCall()); }
	ruleconditional_expression
{ after(grammarAccess.getConstant_expressionAccess().getConditional_expressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconditional_expression
entryRuleconditional_expression 
:
{ before(grammarAccess.getConditional_expressionRule()); }
	 ruleconditional_expression
{ after(grammarAccess.getConditional_expressionRule()); } 
	 EOF 
;

// Rule conditional_expression
ruleconditional_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditional_expressionAccess().getTODOKeyword()); }

	'TODO' 

{ after(grammarAccess.getConditional_expressionAccess().getTODOKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulepreprocessing_file
entryRulepreprocessing_file 
:
{ before(grammarAccess.getPreprocessing_fileRule()); }
	 rulepreprocessing_file
{ after(grammarAccess.getPreprocessing_fileRule()); } 
	 EOF 
;

// Rule preprocessing_file
rulepreprocessing_file
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPreprocessing_fileAccess().getGroupParserRuleCall()); }
(	rulegroup)?
{ after(grammarAccess.getPreprocessing_fileAccess().getGroupParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulepreprocessing_token
entryRulepreprocessing_token 
:
{ before(grammarAccess.getPreprocessing_tokenRule()); }
	 rulepreprocessing_token
{ after(grammarAccess.getPreprocessing_tokenRule()); } 
	 EOF 
;

// Rule preprocessing_token
rulepreprocessing_token
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPreprocessing_tokenAccess().getHEADER_NAMETerminalRuleCall()); }
	RULE_HEADER_NAME
{ after(grammarAccess.getPreprocessing_tokenAccess().getHEADER_NAMETerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleelse_group
entryRuleelse_group 
:
{ before(grammarAccess.getElse_groupRule()); }
	 ruleelse_group
{ after(grammarAccess.getElse_groupRule()); } 
	 EOF 
;

// Rule else_group
ruleelse_group
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElse_groupAccess().getGroup()); }
(rule__Else_group__Group__0)
{ after(grammarAccess.getElse_groupAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleendif_line
entryRuleendif_line 
:
{ before(grammarAccess.getEndif_lineRule()); }
	 ruleendif_line
{ after(grammarAccess.getEndif_lineRule()); } 
	 EOF 
;

// Rule endif_line
ruleendif_line
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEndif_lineAccess().getEndifKeyword()); }

	'#endif' 

{ after(grammarAccess.getEndif_lineAccess().getEndifKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecontrol_line
entryRulecontrol_line 
:
{ before(grammarAccess.getControl_lineRule()); }
	 rulecontrol_line
{ after(grammarAccess.getControl_lineRule()); } 
	 EOF 
;

// Rule control_line
rulecontrol_line
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getControl_lineAccess().getAlternatives()); }
(rule__Control_line__Alternatives)
{ after(grammarAccess.getControl_lineAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulelparen
entryRulelparen 
:
{ before(grammarAccess.getLparenRule()); }
	 rulelparen
{ after(grammarAccess.getLparenRule()); } 
	 EOF 
;

// Rule lparen
rulelparen
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLparenAccess().getLeftParenthesisKeyword()); }

	'(' 

{ after(grammarAccess.getLparenAccess().getLeftParenthesisKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulereplacement_list
entryRulereplacement_list 
:
{ before(grammarAccess.getReplacement_listRule()); }
	 rulereplacement_list
{ after(grammarAccess.getReplacement_listRule()); } 
	 EOF 
;

// Rule replacement_list
rulereplacement_list
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReplacement_listAccess().getPp_tokensParserRuleCall()); }
(	rulepp_tokens)?
{ after(grammarAccess.getReplacement_listAccess().getPp_tokensParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulepp_tokens
entryRulepp_tokens 
:
{ before(grammarAccess.getPp_tokensRule()); }
	 rulepp_tokens
{ after(grammarAccess.getPp_tokensRule()); } 
	 EOF 
;

// Rule pp_tokens
rulepp_tokens
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getPp_tokensAccess().getPreprocessing_tokenParserRuleCall()); }
(	rulepreprocessing_token)
{ after(grammarAccess.getPp_tokensAccess().getPreprocessing_tokenParserRuleCall()); }
)
(
{ before(grammarAccess.getPp_tokensAccess().getPreprocessing_tokenParserRuleCall()); }
(	rulepreprocessing_token)*
{ after(grammarAccess.getPp_tokensAccess().getPreprocessing_tokenParserRuleCall()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulegroup
entryRulegroup 
:
{ before(grammarAccess.getGroupRule()); }
	 rulegroup
{ after(grammarAccess.getGroupRule()); } 
	 EOF 
;

// Rule group
rulegroup
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getGroupAccess().getGroup_partParserRuleCall()); }
(	rulegroup_part)
{ after(grammarAccess.getGroupAccess().getGroup_partParserRuleCall()); }
)
(
{ before(grammarAccess.getGroupAccess().getGroup_partParserRuleCall()); }
(	rulegroup_part)*
{ after(grammarAccess.getGroupAccess().getGroup_partParserRuleCall()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulegroup_part
entryRulegroup_part 
:
{ before(grammarAccess.getGroup_partRule()); }
	 rulegroup_part
{ after(grammarAccess.getGroup_partRule()); } 
	 EOF 
;

// Rule group_part
rulegroup_part
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGroup_partAccess().getAlternatives()); }
(rule__Group_part__Alternatives)
{ after(grammarAccess.getGroup_partAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleif_action
entryRuleif_action 
:
{ before(grammarAccess.getIf_actionRule()); }
	 ruleif_action
{ after(grammarAccess.getIf_actionRule()); } 
	 EOF 
;

// Rule if_action
ruleif_action
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIf_actionAccess().getGroup()); }
(rule__If_action__Group__0)
{ after(grammarAccess.getIf_actionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleif_group
entryRuleif_group 
:
{ before(grammarAccess.getIf_groupRule()); }
	 ruleif_group
{ after(grammarAccess.getIf_groupRule()); } 
	 EOF 
;

// Rule if_group
ruleif_group
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIf_groupAccess().getAlternatives()); }
(rule__If_group__Alternatives)
{ after(grammarAccess.getIf_groupAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleelif_groups
entryRuleelif_groups 
:
{ before(grammarAccess.getElif_groupsRule()); }
	 ruleelif_groups
{ after(grammarAccess.getElif_groupsRule()); } 
	 EOF 
;

// Rule elif_groups
ruleelif_groups
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getElif_groupsAccess().getElif_groupParserRuleCall()); }
(	ruleelif_group)
{ after(grammarAccess.getElif_groupsAccess().getElif_groupParserRuleCall()); }
)
(
{ before(grammarAccess.getElif_groupsAccess().getElif_groupParserRuleCall()); }
(	ruleelif_group)*
{ after(grammarAccess.getElif_groupsAccess().getElif_groupParserRuleCall()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionDeclaration
entryRuleFunctionDeclaration 
:
{ before(grammarAccess.getFunctionDeclarationRule()); }
	 ruleFunctionDeclaration
{ after(grammarAccess.getFunctionDeclarationRule()); } 
	 EOF 
;

// Rule FunctionDeclaration
ruleFunctionDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getGroup()); }
(rule__FunctionDeclaration__Group__0)
{ after(grammarAccess.getFunctionDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarDecl
entryRuleVarDecl 
:
{ before(grammarAccess.getVarDeclRule()); }
	 ruleVarDecl
{ after(grammarAccess.getVarDeclRule()); } 
	 EOF 
;

// Rule VarDecl
ruleVarDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarDeclAccess().getGroup()); }
(rule__VarDecl__Group__0)
{ after(grammarAccess.getVarDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getGroup()); }
(rule__Type__Group__0)
{ after(grammarAccess.getTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulesimple_type_specifier
entryRulesimple_type_specifier 
:
{ before(grammarAccess.getSimple_type_specifierRule()); }
	 rulesimple_type_specifier
{ after(grammarAccess.getSimple_type_specifierRule()); } 
	 EOF 
;

// Rule simple_type_specifier
rulesimple_type_specifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimple_type_specifierAccess().getAlternatives()); }
(rule__Simple_type_specifier__Alternatives)
{ after(grammarAccess.getSimple_type_specifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestatement
entryRulestatement 
:
{ before(grammarAccess.getStatementRule()); }
	 rulestatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule statement
rulestatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulesimple_declaration
entryRulesimple_declaration 
:
{ before(grammarAccess.getSimple_declarationRule()); }
	 rulesimple_declaration
{ after(grammarAccess.getSimple_declarationRule()); } 
	 EOF 
;

// Rule simple_declaration
rulesimple_declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimple_declarationAccess().getGroup()); }
(rule__Simple_declaration__Group__0)
{ after(grammarAccess.getSimple_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulejump_statement
entryRulejump_statement 
:
{ before(grammarAccess.getJump_statementRule()); }
	 rulejump_statement
{ after(grammarAccess.getJump_statementRule()); } 
	 EOF 
;

// Rule jump_statement
rulejump_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJump_statementAccess().getAlternatives()); }
(rule__Jump_statement__Alternatives)
{ after(grammarAccess.getJump_statementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleexpression
entryRuleexpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleexpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule expression
ruleexpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getDUMMYKeyword()); }

	'--DUMMY--' 

{ after(grammarAccess.getExpressionAccess().getDUMMYKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuledeclaration_statement
entryRuledeclaration_statement 
:
{ before(grammarAccess.getDeclaration_statementRule()); }
	 ruledeclaration_statement
{ after(grammarAccess.getDeclaration_statementRule()); } 
	 EOF 
;

// Rule declaration_statement
ruledeclaration_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getDeclaration_statementAccess().getVariaveisAssignment()); }
(rule__Declaration_statement__VariaveisAssignment)
{ after(grammarAccess.getDeclaration_statementAccess().getVariaveisAssignment()); }
)
(
{ before(grammarAccess.getDeclaration_statementAccess().getVariaveisAssignment()); }
(rule__Declaration_statement__VariaveisAssignment)*
{ after(grammarAccess.getDeclaration_statementAccess().getVariaveisAssignment()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleblock_declaration
entryRuleblock_declaration 
:
{ before(grammarAccess.getBlock_declarationRule()); }
	 ruleblock_declaration
{ after(grammarAccess.getBlock_declarationRule()); } 
	 EOF 
;

// Rule block_declaration
ruleblock_declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlock_declarationAccess().getGroup()); }
(rule__Block_declaration__Group__0)
{ after(grammarAccess.getBlock_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Body__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getVariaveisAssignment_2_0()); }
(rule__Body__VariaveisAssignment_2_0)
{ after(grammarAccess.getBodyAccess().getVariaveisAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getBodyAccess().getFuncoesAssignment_2_1()); }
(rule__Body__FuncoesAssignment_2_1)
{ after(grammarAccess.getBodyAccess().getFuncoesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getGroup_0()); }
(rule__Control_line__Group_0__0)
{ after(grammarAccess.getControl_lineAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getControl_lineAccess().getGroup_1()); }
(rule__Control_line__Group_1__0)
{ after(grammarAccess.getControl_lineAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getControl_lineAccess().getGroup_2()); }
(rule__Control_line__Group_2__0)
{ after(grammarAccess.getControl_lineAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getControl_lineAccess().getGroup_3()); }
(rule__Control_line__Group_3__0)
{ after(grammarAccess.getControl_lineAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getControl_lineAccess().getGroup_4()); }
(rule__Control_line__Group_4__0)
{ after(grammarAccess.getControl_lineAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getControl_lineAccess().getGroup_5()); }
(rule__Control_line__Group_5__0)
{ after(grammarAccess.getControl_lineAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getControl_lineAccess().getGroup_6()); }
(rule__Control_line__Group_6__0)
{ after(grammarAccess.getControl_lineAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getControl_lineAccess().getNumberSignKeyword_7()); }

	'#' 

{ after(grammarAccess.getControl_lineAccess().getNumberSignKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Group_part__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroup_partAccess().getIf_actionParserRuleCall_0()); }
	ruleif_action
{ after(grammarAccess.getGroup_partAccess().getIf_actionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getGroup_partAccess().getControl_lineParserRuleCall_1()); }
	rulecontrol_line
{ after(grammarAccess.getGroup_partAccess().getControl_lineParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If_group__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_groupAccess().getGroup_0()); }
(rule__If_group__Group_0__0)
{ after(grammarAccess.getIf_groupAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getIf_groupAccess().getGroup_1()); }
(rule__If_group__Group_1__0)
{ after(grammarAccess.getIf_groupAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getIf_groupAccess().getGroup_2()); }
(rule__If_group__Group_2__0)
{ after(grammarAccess.getIf_groupAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_type_specifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_type_specifierAccess().getGroup_0()); }
(rule__Simple_type_specifier__Group_0__0)
{ after(grammarAccess.getSimple_type_specifierAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSimple_type_specifierAccess().getGroup_1()); }
(rule__Simple_type_specifier__Group_1__0)
{ after(grammarAccess.getSimple_type_specifierAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getSimple_type_specifierAccess().getGroup_2()); }
(rule__Simple_type_specifier__Group_2__0)
{ after(grammarAccess.getSimple_type_specifierAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getGroup_0()); }
(rule__Statement__Group_0__0)
{ after(grammarAccess.getStatementAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_1()); }
(rule__Statement__Group_1__0)
{ after(grammarAccess.getStatementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJump_statementAccess().getBreakKeyword_0()); }

	'break;' 

{ after(grammarAccess.getJump_statementAccess().getBreakKeyword_0()); }
)

    |(
{ before(grammarAccess.getJump_statementAccess().getContinueKeyword_1()); }

	'continue;' 

{ after(grammarAccess.getJump_statementAccess().getContinueKeyword_1()); }
)

    |(
{ before(grammarAccess.getJump_statementAccess().getGroup_2()); }
(rule__Jump_statement__Group_2__0)
{ after(grammarAccess.getJump_statementAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getJump_statementAccess().getGroup_3()); }
(rule__Jump_statement__Group_3__0)
{ after(grammarAccess.getJump_statementAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Body__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__0__Impl
	rule__Body__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getBodyAction_0()); }
(

)
{ after(grammarAccess.getBodyAccess().getBodyAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__1__Impl
	rule__Body__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getPreprocessing_fileParserRuleCall_1()); }
	rulepreprocessing_file
{ after(grammarAccess.getBodyAccess().getPreprocessing_fileParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getAlternatives_2()); }
(rule__Body__Alternatives_2)*
{ after(grammarAccess.getBodyAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Elif_group__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Elif_group__Group__0__Impl
	rule__Elif_group__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Elif_group__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElif_groupAccess().getElifKeyword_0()); }

	'#elif' 

{ after(grammarAccess.getElif_groupAccess().getElifKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Elif_group__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Elif_group__Group__1__Impl
	rule__Elif_group__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Elif_group__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElif_groupAccess().getConstant_expressionParserRuleCall_1()); }
	ruleconstant_expression
{ after(grammarAccess.getElif_groupAccess().getConstant_expressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Elif_group__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Elif_group__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Elif_group__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElif_groupAccess().getGroupParserRuleCall_2()); }
(	rulegroup)?
{ after(grammarAccess.getElif_groupAccess().getGroupParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Else_group__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Else_group__Group__0__Impl
	rule__Else_group__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Else_group__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElse_groupAccess().getElseKeyword_0()); }

	'#else' 

{ after(grammarAccess.getElse_groupAccess().getElseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Else_group__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Else_group__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Else_group__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElse_groupAccess().getGroupParserRuleCall_1()); }
(	rulegroup)?
{ after(grammarAccess.getElse_groupAccess().getGroupParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Control_line__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_0__0__Impl
	rule__Control_line__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getIncludeKeyword_0_0()); }

	'#include' 

{ after(grammarAccess.getControl_lineAccess().getIncludeKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getPp_tokensParserRuleCall_0_1()); }
	rulepp_tokens
{ after(grammarAccess.getControl_lineAccess().getPp_tokensParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Control_line__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_1__0__Impl
	rule__Control_line__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getDefineKeyword_1_0()); }

	'#define' 

{ after(grammarAccess.getControl_lineAccess().getDefineKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_1__1__Impl
	rule__Control_line__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getControl_lineAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getReplacement_listParserRuleCall_1_2()); }
	rulereplacement_list
{ after(grammarAccess.getControl_lineAccess().getReplacement_listParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Control_line__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_2__0__Impl
	rule__Control_line__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getDefineKeyword_2_0()); }

	'#define' 

{ after(grammarAccess.getControl_lineAccess().getDefineKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_2__1__Impl
	rule__Control_line__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getIDTerminalRuleCall_2_1()); }
	RULE_ID
{ after(grammarAccess.getControl_lineAccess().getIDTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_2__2__Impl
	rule__Control_line__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getLparenParserRuleCall_2_2()); }
	rulelparen
{ after(grammarAccess.getControl_lineAccess().getLparenParserRuleCall_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_2__3__Impl
	rule__Control_line__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getIDTerminalRuleCall_2_3()); }
(	RULE_ID)?
{ after(grammarAccess.getControl_lineAccess().getIDTerminalRuleCall_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_2__4__Impl
	rule__Control_line__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getRightParenthesisKeyword_2_4()); }

	')' 

{ after(grammarAccess.getControl_lineAccess().getRightParenthesisKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getReplacement_listParserRuleCall_2_5()); }
	rulereplacement_list
{ after(grammarAccess.getControl_lineAccess().getReplacement_listParserRuleCall_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Control_line__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_3__0__Impl
	rule__Control_line__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getUndefKeyword_3_0()); }

	'#undef' 

{ after(grammarAccess.getControl_lineAccess().getUndefKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getIDTerminalRuleCall_3_1()); }
	RULE_ID
{ after(grammarAccess.getControl_lineAccess().getIDTerminalRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Control_line__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_4__0__Impl
	rule__Control_line__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getLineKeyword_4_0()); }

	'#line' 

{ after(grammarAccess.getControl_lineAccess().getLineKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getPp_tokensParserRuleCall_4_1()); }
	rulepp_tokens
{ after(grammarAccess.getControl_lineAccess().getPp_tokensParserRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Control_line__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_5__0__Impl
	rule__Control_line__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getErrorKeyword_5_0()); }

	'#error' 

{ after(grammarAccess.getControl_lineAccess().getErrorKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getPp_tokensParserRuleCall_5_1()); }
(	rulepp_tokens)?
{ after(grammarAccess.getControl_lineAccess().getPp_tokensParserRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Control_line__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_6__0__Impl
	rule__Control_line__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getPragmaKeyword_6_0()); }

	'#pragma' 

{ after(grammarAccess.getControl_lineAccess().getPragmaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Control_line__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Control_line__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Control_line__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControl_lineAccess().getPp_tokensParserRuleCall_6_1()); }
(	rulepp_tokens)?
{ after(grammarAccess.getControl_lineAccess().getPp_tokensParserRuleCall_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__If_action__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_action__Group__0__Impl
	rule__If_action__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If_action__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_actionAccess().getIf_groupParserRuleCall_0()); }
	ruleif_group
{ after(grammarAccess.getIf_actionAccess().getIf_groupParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_action__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_action__Group__1__Impl
	rule__If_action__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If_action__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_actionAccess().getElif_groupsParserRuleCall_1()); }
(	ruleelif_groups)?
{ after(grammarAccess.getIf_actionAccess().getElif_groupsParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_action__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_action__Group__2__Impl
	rule__If_action__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If_action__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_actionAccess().getElse_groupParserRuleCall_2()); }
(	ruleelse_group)?
{ after(grammarAccess.getIf_actionAccess().getElse_groupParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_action__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_action__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If_action__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_actionAccess().getEndif_lineParserRuleCall_3()); }
	ruleendif_line
{ after(grammarAccess.getIf_actionAccess().getEndif_lineParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__If_group__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_group__Group_0__0__Impl
	rule__If_group__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If_group__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_groupAccess().getIfKeyword_0_0()); }

	'#if' 

{ after(grammarAccess.getIf_groupAccess().getIfKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_group__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_group__Group_0__1__Impl
	rule__If_group__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If_group__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_groupAccess().getConstant_expressionParserRuleCall_0_1()); }
	ruleconstant_expression
{ after(grammarAccess.getIf_groupAccess().getConstant_expressionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_group__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_group__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If_group__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_groupAccess().getGroupParserRuleCall_0_2()); }
(	rulegroup)?
{ after(grammarAccess.getIf_groupAccess().getGroupParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__If_group__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_group__Group_1__0__Impl
	rule__If_group__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If_group__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_groupAccess().getIfdefKeyword_1_0()); }

	'#ifdef' 

{ after(grammarAccess.getIf_groupAccess().getIfdefKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_group__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_group__Group_1__1__Impl
	rule__If_group__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If_group__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_groupAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getIf_groupAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_group__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_group__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If_group__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_groupAccess().getGroupParserRuleCall_1_2()); }
(	rulegroup)?
{ after(grammarAccess.getIf_groupAccess().getGroupParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__If_group__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_group__Group_2__0__Impl
	rule__If_group__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If_group__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_groupAccess().getIfndefKeyword_2_0()); }

	'#ifndef' 

{ after(grammarAccess.getIf_groupAccess().getIfndefKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_group__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_group__Group_2__1__Impl
	rule__If_group__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If_group__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_groupAccess().getIDTerminalRuleCall_2_1()); }
	RULE_ID
{ after(grammarAccess.getIf_groupAccess().getIDTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_group__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_group__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If_group__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_groupAccess().getGroupParserRuleCall_2_2()); }
(	rulegroup)?
{ after(grammarAccess.getIf_groupAccess().getGroupParserRuleCall_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FunctionDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__0__Impl
	rule__FunctionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getFunctionDeclarationAction_0()); }
(

)
{ after(grammarAccess.getFunctionDeclarationAccess().getFunctionDeclarationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__1__Impl
	rule__FunctionDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getTypeAssignment_1()); }
(rule__FunctionDeclaration__TypeAssignment_1)
{ after(grammarAccess.getFunctionDeclarationAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__2__Impl
	rule__FunctionDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getNameAssignment_2()); }
(rule__FunctionDeclaration__NameAssignment_2)
{ after(grammarAccess.getFunctionDeclarationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__3__Impl
	rule__FunctionDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getFunctionDeclarationAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__4__Impl
	rule__FunctionDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getGroup_4()); }
(rule__FunctionDeclaration__Group_4__0)?
{ after(grammarAccess.getFunctionDeclarationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__5__Impl
	rule__FunctionDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getFunctionDeclarationAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__6__Impl
	rule__FunctionDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getFunctionDeclarationAccess().getLeftCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__7__Impl
	rule__FunctionDeclaration__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getEscopoAssignment_7()); }
(rule__FunctionDeclaration__EscopoAssignment_7)?
{ after(grammarAccess.getFunctionDeclarationAccess().getEscopoAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getFunctionDeclarationAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__FunctionDeclaration__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group_4__0__Impl
	rule__FunctionDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getParamsAssignment_4_0()); }
(rule__FunctionDeclaration__ParamsAssignment_4_0)
{ after(grammarAccess.getFunctionDeclarationAccess().getParamsAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getGroup_4_1()); }
(rule__FunctionDeclaration__Group_4_1__0)*
{ after(grammarAccess.getFunctionDeclarationAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionDeclaration__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group_4_1__0__Impl
	rule__FunctionDeclaration__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getCommaKeyword_4_1_0()); }

	',' 

{ after(grammarAccess.getFunctionDeclarationAccess().getCommaKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getParamsAssignment_4_1_1()); }
(rule__FunctionDeclaration__ParamsAssignment_4_1_1)
{ after(grammarAccess.getFunctionDeclarationAccess().getParamsAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getParameterAction_0()); }
(

)
{ after(grammarAccess.getParameterAccess().getParameterAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeAssignment_1()); }
(rule__Parameter__TypeAssignment_1)
{ after(grammarAccess.getParameterAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameAssignment_2()); }
(rule__Parameter__NameAssignment_2)
{ after(grammarAccess.getParameterAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VarDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDecl__Group__0__Impl
	rule__VarDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getVarDeclAction_0()); }
(

)
{ after(grammarAccess.getVarDeclAccess().getVarDeclAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDecl__Group__1__Impl
	rule__VarDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getTypeAssignment_1()); }
(rule__VarDecl__TypeAssignment_1)
{ after(grammarAccess.getVarDeclAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getNameAssignment_2()); }
(rule__VarDecl__NameAssignment_2)
{ after(grammarAccess.getVarDeclAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__0__Impl
	rule__Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypeAction_0()); }
(

)
{ after(grammarAccess.getTypeAccess().getTypeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getStsAssignment_1()); }
(rule__Type__StsAssignment_1)
{ after(grammarAccess.getTypeAccess().getStsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Simple_type_specifier__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_type_specifier__Group_0__0__Impl
	rule__Simple_type_specifier__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_type_specifier__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_type_specifierAccess().getIntTypeAction_0_0()); }
(

)
{ after(grammarAccess.getSimple_type_specifierAccess().getIntTypeAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simple_type_specifier__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_type_specifier__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_type_specifier__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_type_specifierAccess().getNameAssignment_0_1()); }
(rule__Simple_type_specifier__NameAssignment_0_1)
{ after(grammarAccess.getSimple_type_specifierAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Simple_type_specifier__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_type_specifier__Group_1__0__Impl
	rule__Simple_type_specifier__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_type_specifier__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_type_specifierAccess().getBoolTypeAction_1_0()); }
(

)
{ after(grammarAccess.getSimple_type_specifierAccess().getBoolTypeAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simple_type_specifier__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_type_specifier__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_type_specifier__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_type_specifierAccess().getNameAssignment_1_1()); }
(rule__Simple_type_specifier__NameAssignment_1_1)
{ after(grammarAccess.getSimple_type_specifierAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Simple_type_specifier__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_type_specifier__Group_2__0__Impl
	rule__Simple_type_specifier__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_type_specifier__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_type_specifierAccess().getUnknownTypeAction_2_0()); }
(

)
{ after(grammarAccess.getSimple_type_specifierAccess().getUnknownTypeAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simple_type_specifier__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_type_specifier__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_type_specifier__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_type_specifierAccess().getNameAssignment_2_1()); }
(rule__Simple_type_specifier__NameAssignment_2_1)
{ after(grammarAccess.getSimple_type_specifierAccess().getNameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_0__0__Impl
	rule__Statement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getJumpAction_0_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getJumpAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getJumpAssignment_0_1()); }
(rule__Statement__JumpAssignment_0_1)
{ after(grammarAccess.getStatementAccess().getJumpAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_1__0__Impl
	rule__Statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementAction_1_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getStatementAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getVariavelAssignment_1_1()); }
(rule__Statement__VariavelAssignment_1_1)
{ after(grammarAccess.getStatementAccess().getVariavelAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Simple_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_declaration__Group__0__Impl
	rule__Simple_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_declarationAccess().getVariavelAssignment_0()); }
(rule__Simple_declaration__VariavelAssignment_0)
{ after(grammarAccess.getSimple_declarationAccess().getVariavelAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simple_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_declaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_declarationAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getSimple_declarationAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Jump_statement__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jump_statement__Group_2__0__Impl
	rule__Jump_statement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJump_statementAccess().getReturnAction_2_0()); }
(

)
{ after(grammarAccess.getJump_statementAccess().getReturnAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Jump_statement__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jump_statement__Group_2__1__Impl
	rule__Jump_statement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJump_statementAccess().getReturnKeyword_2_1()); }

	'return' 

{ after(grammarAccess.getJump_statementAccess().getReturnKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Jump_statement__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jump_statement__Group_2__2__Impl
	rule__Jump_statement__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJump_statementAccess().getExpAssignment_2_2()); }
(rule__Jump_statement__ExpAssignment_2_2)?
{ after(grammarAccess.getJump_statementAccess().getExpAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Jump_statement__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jump_statement__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJump_statementAccess().getSemicolonKeyword_2_3()); }

	';' 

{ after(grammarAccess.getJump_statementAccess().getSemicolonKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Jump_statement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jump_statement__Group_3__0__Impl
	rule__Jump_statement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJump_statementAccess().getGotoKeyword_3_0()); }

	'goto' 

{ after(grammarAccess.getJump_statementAccess().getGotoKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Jump_statement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jump_statement__Group_3__1__Impl
	rule__Jump_statement__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJump_statementAccess().getIDTerminalRuleCall_3_1()); }
	RULE_ID
{ after(grammarAccess.getJump_statementAccess().getIDTerminalRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Jump_statement__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Jump_statement__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJump_statementAccess().getSemicolonKeyword_3_2()); }

	';' 

{ after(grammarAccess.getJump_statementAccess().getSemicolonKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Block_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block_declaration__Group__0__Impl
	rule__Block_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlock_declarationAccess().getBlock_declarationAction_0()); }
(

)
{ after(grammarAccess.getBlock_declarationAccess().getBlock_declarationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block_declaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlock_declarationAccess().getVariavelAssignment_1()); }
(rule__Block_declaration__VariavelAssignment_1)
{ after(grammarAccess.getBlock_declarationAccess().getVariavelAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Body__VariaveisAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getVariaveisVarDeclParserRuleCall_2_0_0()); }
	ruleVarDecl{ after(grammarAccess.getBodyAccess().getVariaveisVarDeclParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Body__FuncoesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getFuncoesFunctionDeclarationParserRuleCall_2_1_0()); }
	ruleFunctionDeclaration{ after(grammarAccess.getBodyAccess().getFuncoesFunctionDeclarationParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getTypeTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getFunctionDeclarationAccess().getTypeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getFunctionDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__ParamsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getParamsParameterParserRuleCall_4_0_0()); }
	ruleParameter{ after(grammarAccess.getFunctionDeclarationAccess().getParamsParameterParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__ParamsAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getParamsParameterParserRuleCall_4_1_1_0()); }
	ruleParameter{ after(grammarAccess.getFunctionDeclarationAccess().getParamsParameterParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__EscopoAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getEscopoStatementParserRuleCall_7_0()); }
	rulestatement{ after(grammarAccess.getFunctionDeclarationAccess().getEscopoStatementParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getTypeTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getVarDeclAccess().getTypeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getVarDeclAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__StsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getStsSimple_type_specifierParserRuleCall_1_0()); }
	rulesimple_type_specifier{ after(grammarAccess.getTypeAccess().getStsSimple_type_specifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_type_specifier__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_type_specifierAccess().getNameIntKeyword_0_1_0()); }
(
{ before(grammarAccess.getSimple_type_specifierAccess().getNameIntKeyword_0_1_0()); }

	'int' 

{ after(grammarAccess.getSimple_type_specifierAccess().getNameIntKeyword_0_1_0()); }
)

{ after(grammarAccess.getSimple_type_specifierAccess().getNameIntKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_type_specifier__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_type_specifierAccess().getNameBoolKeyword_1_1_0()); }
(
{ before(grammarAccess.getSimple_type_specifierAccess().getNameBoolKeyword_1_1_0()); }

	'bool' 

{ after(grammarAccess.getSimple_type_specifierAccess().getNameBoolKeyword_1_1_0()); }
)

{ after(grammarAccess.getSimple_type_specifierAccess().getNameBoolKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_type_specifier__NameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_type_specifierAccess().getNameIDTerminalRuleCall_2_1_0()); }
	RULE_ID{ after(grammarAccess.getSimple_type_specifierAccess().getNameIDTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__JumpAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getJumpJump_statementParserRuleCall_0_1_0()); }
	rulejump_statement{ after(grammarAccess.getStatementAccess().getJumpJump_statementParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__VariavelAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getVariavelDeclaration_statementParserRuleCall_1_1_0()); }
	ruledeclaration_statement{ after(grammarAccess.getStatementAccess().getVariavelDeclaration_statementParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_declaration__VariavelAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_declarationAccess().getVariavelVarDeclParserRuleCall_0_0()); }
	ruleVarDecl{ after(grammarAccess.getSimple_declarationAccess().getVariavelVarDeclParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__ExpAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJump_statementAccess().getExpExpressionParserRuleCall_2_2_0()); }
	ruleexpression{ after(grammarAccess.getJump_statementAccess().getExpExpressionParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_statement__VariaveisAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaration_statementAccess().getVariaveisBlock_declarationParserRuleCall_0()); }
	ruleblock_declaration{ after(grammarAccess.getDeclaration_statementAccess().getVariaveisBlock_declarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block_declaration__VariavelAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlock_declarationAccess().getVariavelSimple_declarationParserRuleCall_1_0()); }
	rulesimple_declaration{ after(grammarAccess.getBlock_declarationAccess().getVariavelSimple_declarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_HEADER_NAME : ('<' (RULE_ID|'.') '>'|'"' (RULE_ID|'.') '"');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


